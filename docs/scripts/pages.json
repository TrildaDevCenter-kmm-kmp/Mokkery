[{"name":"annotation class DelicateMokkeryApi","description":"dev.mokkery.annotations.DelicateMokkeryApi","location":"mokkery-core/dev.mokkery.annotations/-delicate-mokkery-api/index.html","searchKeys":["DelicateMokkeryApi","annotation class DelicateMokkeryApi","dev.mokkery.annotations.DelicateMokkeryApi"]},{"name":"annotation class InternalMokkeryApi","description":"dev.mokkery.annotations.InternalMokkeryApi","location":"mokkery-core/dev.mokkery.annotations/-internal-mokkery-api/index.html","searchKeys":["InternalMokkeryApi","annotation class InternalMokkeryApi","dev.mokkery.annotations.InternalMokkeryApi"]},{"name":"autoUnit","description":"dev.mokkery.MockMode.autoUnit","location":"mokkery-core/dev.mokkery/-mock-mode/auto-unit/index.html","searchKeys":["autoUnit","autoUnit","dev.mokkery.MockMode.autoUnit"]},{"name":"autofill","description":"dev.mokkery.MockMode.autofill","location":"mokkery-core/dev.mokkery/-mock-mode/autofill/index.html","searchKeys":["autofill","autofill","dev.mokkery.MockMode.autofill"]},{"name":"const val GROUP: String","description":"dev.mokkery.MokkeryConfig.GROUP","location":"mokkery-core/dev.mokkery/-mokkery-config/-g-r-o-u-p.html","searchKeys":["GROUP","const val GROUP: String","dev.mokkery.MokkeryConfig.GROUP"]},{"name":"const val KOTLIN_VERSION: String","description":"dev.mokkery.MokkeryConfig.KOTLIN_VERSION","location":"mokkery-core/dev.mokkery/-mokkery-config/-k-o-t-l-i-n_-v-e-r-s-i-o-n.html","searchKeys":["KOTLIN_VERSION","const val KOTLIN_VERSION: String","dev.mokkery.MokkeryConfig.KOTLIN_VERSION"]},{"name":"const val PLUGIN_ARTIFACT_ID: String","description":"dev.mokkery.MokkeryConfig.PLUGIN_ARTIFACT_ID","location":"mokkery-core/dev.mokkery/-mokkery-config/-p-l-u-g-i-n_-a-r-t-i-f-a-c-t_-i-d.html","searchKeys":["PLUGIN_ARTIFACT_ID","const val PLUGIN_ARTIFACT_ID: String","dev.mokkery.MokkeryConfig.PLUGIN_ARTIFACT_ID"]},{"name":"const val PLUGIN_ID: String","description":"dev.mokkery.MokkeryConfig.PLUGIN_ID","location":"mokkery-core/dev.mokkery/-mokkery-config/-p-l-u-g-i-n_-i-d.html","searchKeys":["PLUGIN_ID","const val PLUGIN_ID: String","dev.mokkery.MokkeryConfig.PLUGIN_ID"]},{"name":"const val RUNTIME_DEPENDENCY: String","description":"dev.mokkery.MokkeryConfig.RUNTIME_DEPENDENCY","location":"mokkery-core/dev.mokkery/-mokkery-config/-r-u-n-t-i-m-e_-d-e-p-e-n-d-e-n-c-y.html","searchKeys":["RUNTIME_DEPENDENCY","const val RUNTIME_DEPENDENCY: String","dev.mokkery.MokkeryConfig.RUNTIME_DEPENDENCY"]},{"name":"const val VERSION: String","description":"dev.mokkery.MokkeryConfig.VERSION","location":"mokkery-core/dev.mokkery/-mokkery-config/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","dev.mokkery.MokkeryConfig.VERSION"]},{"name":"constructor(atLeast: Int, atMost: Int)","description":"dev.mokkery.verify.SoftVerifyMode.SoftVerifyMode","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/-soft-verify-mode.html","searchKeys":["SoftVerifyMode","constructor(atLeast: Int, atMost: Int)","dev.mokkery.verify.SoftVerifyMode.SoftVerifyMode"]},{"name":"constructor(message: String? = null, cause: Throwable? = null)","description":"dev.mokkery.MokkeryRuntimeException.MokkeryRuntimeException","location":"mokkery-core/dev.mokkery/-mokkery-runtime-exception/-mokkery-runtime-exception.html","searchKeys":["MokkeryRuntimeException","constructor(message: String? = null, cause: Throwable? = null)","dev.mokkery.MokkeryRuntimeException.MokkeryRuntimeException"]},{"name":"data class SoftVerifyMode(val atLeast: Int, val atMost: Int) : VerifyMode","description":"dev.mokkery.verify.SoftVerifyMode","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/index.html","searchKeys":["SoftVerifyMode","data class SoftVerifyMode(val atLeast: Int, val atMost: Int) : VerifyMode","dev.mokkery.verify.SoftVerifyMode"]},{"name":"enum MockMode : Enum<MockMode> ","description":"dev.mokkery.MockMode","location":"mokkery-core/dev.mokkery/-mock-mode/index.html","searchKeys":["MockMode","enum MockMode : Enum<MockMode> ","dev.mokkery.MockMode"]},{"name":"fun atLeast(n: Int): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.atLeast","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/at-least.html","searchKeys":["atLeast","fun atLeast(n: Int): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.atLeast"]},{"name":"fun atMost(n: Int): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.atMost","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/at-most.html","searchKeys":["atMost","fun atMost(n: Int): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.atMost"]},{"name":"fun deserialize(value: String): VerifyMode","description":"dev.mokkery.verify.VerifyModeSerializer.deserialize","location":"mokkery-core/dev.mokkery.verify/-verify-mode-serializer/deserialize.html","searchKeys":["deserialize","fun deserialize(value: String): VerifyMode","dev.mokkery.verify.VerifyModeSerializer.deserialize"]},{"name":"fun exactly(n: Int): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.exactly","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/exactly.html","searchKeys":["exactly","fun exactly(n: Int): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.exactly"]},{"name":"fun inRange(range: IntRange): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.inRange","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/in-range.html","searchKeys":["inRange","fun inRange(range: IntRange): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.inRange"]},{"name":"fun serialize(verifyMode: VerifyMode): String","description":"dev.mokkery.verify.VerifyModeSerializer.serialize","location":"mokkery-core/dev.mokkery.verify/-verify-mode-serializer/serialize.html","searchKeys":["serialize","fun serialize(verifyMode: VerifyMode): String","dev.mokkery.verify.VerifyModeSerializer.serialize"]},{"name":"fun valueOf(value: String): MockMode","description":"dev.mokkery.MockMode.valueOf","location":"mokkery-core/dev.mokkery/-mock-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MockMode","dev.mokkery.MockMode.valueOf"]},{"name":"fun values(): Array<MockMode>","description":"dev.mokkery.MockMode.values","location":"mokkery-core/dev.mokkery/-mock-mode/values.html","searchKeys":["values","fun values(): Array<MockMode>","dev.mokkery.MockMode.values"]},{"name":"object Companion","description":"dev.mokkery.verify.VerifyMode.Companion","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/index.html","searchKeys":["Companion","object Companion","dev.mokkery.verify.VerifyMode.Companion"]},{"name":"object ExhaustiveOrderVerifyMode : VerifyMode","description":"dev.mokkery.verify.ExhaustiveOrderVerifyMode","location":"mokkery-core/dev.mokkery.verify/-exhaustive-order-verify-mode/index.html","searchKeys":["ExhaustiveOrderVerifyMode","object ExhaustiveOrderVerifyMode : VerifyMode","dev.mokkery.verify.ExhaustiveOrderVerifyMode"]},{"name":"object ExhaustiveSoftVerifyMode : VerifyMode","description":"dev.mokkery.verify.ExhaustiveSoftVerifyMode","location":"mokkery-core/dev.mokkery.verify/-exhaustive-soft-verify-mode/index.html","searchKeys":["ExhaustiveSoftVerifyMode","object ExhaustiveSoftVerifyMode : VerifyMode","dev.mokkery.verify.ExhaustiveSoftVerifyMode"]},{"name":"object MokkeryCompilerDefaults","description":"dev.mokkery.MokkeryCompilerDefaults","location":"mokkery-core/dev.mokkery/-mokkery-compiler-defaults/index.html","searchKeys":["MokkeryCompilerDefaults","object MokkeryCompilerDefaults","dev.mokkery.MokkeryCompilerDefaults"]},{"name":"object MokkeryConfig","description":"dev.mokkery.MokkeryConfig","location":"mokkery-core/dev.mokkery/-mokkery-config/index.html","searchKeys":["MokkeryConfig","object MokkeryConfig","dev.mokkery.MokkeryConfig"]},{"name":"object NotVerifyMode : VerifyMode","description":"dev.mokkery.verify.NotVerifyMode","location":"mokkery-core/dev.mokkery.verify/-not-verify-mode/index.html","searchKeys":["NotVerifyMode","object NotVerifyMode : VerifyMode","dev.mokkery.verify.NotVerifyMode"]},{"name":"object OrderVerifyMode : VerifyMode","description":"dev.mokkery.verify.OrderVerifyMode","location":"mokkery-core/dev.mokkery.verify/-order-verify-mode/index.html","searchKeys":["OrderVerifyMode","object OrderVerifyMode : VerifyMode","dev.mokkery.verify.OrderVerifyMode"]},{"name":"object VerifyModeSerializer","description":"dev.mokkery.verify.VerifyModeSerializer","location":"mokkery-core/dev.mokkery.verify/-verify-mode-serializer/index.html","searchKeys":["VerifyModeSerializer","object VerifyModeSerializer","dev.mokkery.verify.VerifyModeSerializer"]},{"name":"open class MokkeryRuntimeException(message: String? = null, cause: Throwable? = null) : RuntimeException","description":"dev.mokkery.MokkeryRuntimeException","location":"mokkery-core/dev.mokkery/-mokkery-runtime-exception/index.html","searchKeys":["MokkeryRuntimeException","open class MokkeryRuntimeException(message: String? = null, cause: Throwable? = null) : RuntimeException","dev.mokkery.MokkeryRuntimeException"]},{"name":"sealed class VerifyMode","description":"dev.mokkery.verify.VerifyMode","location":"mokkery-core/dev.mokkery.verify/-verify-mode/index.html","searchKeys":["VerifyMode","sealed class VerifyMode","dev.mokkery.verify.VerifyMode"]},{"name":"strict","description":"dev.mokkery.MockMode.strict","location":"mokkery-core/dev.mokkery/-mock-mode/strict/index.html","searchKeys":["strict","strict","dev.mokkery.MockMode.strict"]},{"name":"val atLeast: Int","description":"dev.mokkery.verify.SoftVerifyMode.atLeast","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/at-least.html","searchKeys":["atLeast","val atLeast: Int","dev.mokkery.verify.SoftVerifyMode.atLeast"]},{"name":"val atMost: Int","description":"dev.mokkery.verify.SoftVerifyMode.atMost","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/at-most.html","searchKeys":["atMost","val atMost: Int","dev.mokkery.verify.SoftVerifyMode.atMost"]},{"name":"val entries: EnumEntries<MockMode>","description":"dev.mokkery.MockMode.entries","location":"mokkery-core/dev.mokkery/-mock-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<MockMode>","dev.mokkery.MockMode.entries"]},{"name":"val exhaustive: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.exhaustive","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/exhaustive.html","searchKeys":["exhaustive","val exhaustive: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.exhaustive"]},{"name":"val exhaustiveOrder: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.exhaustiveOrder","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/exhaustive-order.html","searchKeys":["exhaustiveOrder","val exhaustiveOrder: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.exhaustiveOrder"]},{"name":"val mockMode: MockMode","description":"dev.mokkery.MokkeryCompilerDefaults.mockMode","location":"mokkery-core/dev.mokkery/-mokkery-compiler-defaults/mock-mode.html","searchKeys":["mockMode","val mockMode: MockMode","dev.mokkery.MokkeryCompilerDefaults.mockMode"]},{"name":"val not: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.not","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/not.html","searchKeys":["not","val not: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.not"]},{"name":"val order: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.order","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/order.html","searchKeys":["order","val order: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.order"]},{"name":"val soft: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.soft","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/soft.html","searchKeys":["soft","val soft: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.soft"]},{"name":"val verifyMode: VerifyMode","description":"dev.mokkery.MokkeryCompilerDefaults.verifyMode","location":"mokkery-core/dev.mokkery/-mokkery-compiler-defaults/verify-mode.html","searchKeys":["verifyMode","val verifyMode: VerifyMode","dev.mokkery.MokkeryCompilerDefaults.verifyMode"]},{"name":"Eq","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Eq","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-eq/index.html","searchKeys":["Eq","Eq","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Eq"]},{"name":"Gt","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gt","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-gt/index.html","searchKeys":["Gt","Gt","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gt"]},{"name":"Gte","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gte","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-gte/index.html","searchKeys":["Gte","Gte","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gte"]},{"name":"Lt","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lt","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-lt/index.html","searchKeys":["Lt","Lt","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lt"]},{"name":"Lte","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lte","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-lte/index.html","searchKeys":["Lte","Lte","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lte"]},{"name":"abstract class Base<in T> : VarArgMatcher","description":"dev.mokkery.matcher.varargs.VarArgMatcher.Base","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-base/index.html","searchKeys":["Base","abstract class Base<in T> : VarArgMatcher","dev.mokkery.matcher.varargs.VarArgMatcher.Base"]},{"name":"abstract fun <T> matches(argType: KClass<*>, matcher: ArgMatcher<T>): T","description":"dev.mokkery.matcher.ArgMatchersScope.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matchers-scope/matches.html","searchKeys":["matches","abstract fun <T> matches(argType: KClass<*>, matcher: ArgMatcher<T>): T","dev.mokkery.matcher.ArgMatchersScope.matches"]},{"name":"abstract fun assertFilled()","description":"dev.mokkery.matcher.ArgMatcher.Composite.assertFilled","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-composite/assert-filled.html","searchKeys":["assertFilled","abstract fun assertFilled()","dev.mokkery.matcher.ArgMatcher.Composite.assertFilled"]},{"name":"abstract fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/call.html","searchKeys":["call","abstract fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.call"]},{"name":"abstract fun callOriginal(): R","description":"dev.mokkery.answering.BlockingCallDefinitionScope.callOriginal","location":"mokkery-runtime/dev.mokkery.answering/-blocking-call-definition-scope/call-original.html","searchKeys":["callOriginal","abstract fun callOriginal(): R","dev.mokkery.answering.BlockingCallDefinitionScope.callOriginal"]},{"name":"abstract fun callOriginalWith(vararg args: Any?): R","description":"dev.mokkery.answering.BlockingCallDefinitionScope.callOriginalWith","location":"mokkery-runtime/dev.mokkery.answering/-blocking-call-definition-scope/call-original-with.html","searchKeys":["callOriginalWith","abstract fun callOriginalWith(vararg args: Any?): R","dev.mokkery.answering.BlockingCallDefinitionScope.callOriginalWith"]},{"name":"abstract fun callSuper(type: KClass<*>): R","description":"dev.mokkery.answering.BlockingCallDefinitionScope.callSuper","location":"mokkery-runtime/dev.mokkery.answering/-blocking-call-definition-scope/call-super.html","searchKeys":["callSuper","abstract fun callSuper(type: KClass<*>): R","dev.mokkery.answering.BlockingCallDefinitionScope.callSuper"]},{"name":"abstract fun callSuperWith(type: KClass<*>, vararg args: Any?): R","description":"dev.mokkery.answering.BlockingCallDefinitionScope.callSuperWith","location":"mokkery-runtime/dev.mokkery.answering/-blocking-call-definition-scope/call-super-with.html","searchKeys":["callSuperWith","abstract fun callSuperWith(type: KClass<*>, vararg args: Any?): R","dev.mokkery.answering.BlockingCallDefinitionScope.callSuperWith"]},{"name":"abstract fun capture(value: T)","description":"dev.mokkery.matcher.capture.Capture.capture","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/capture.html","searchKeys":["capture","abstract fun capture(value: T)","dev.mokkery.matcher.capture.Capture.capture"]},{"name":"abstract fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","description":"dev.mokkery.matcher.ArgMatcher.Composite.compose","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-composite/compose.html","searchKeys":["compose","abstract fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","dev.mokkery.matcher.ArgMatcher.Composite.compose"]},{"name":"abstract fun hasNext(): Boolean","description":"dev.mokkery.answering.Answer.Sequential.hasNext","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential/has-next.html","searchKeys":["hasNext","abstract fun hasNext(): Boolean","dev.mokkery.answering.Answer.Sequential.hasNext"]},{"name":"abstract fun isFilled(): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Composite.isFilled","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-composite/is-filled.html","searchKeys":["isFilled","abstract fun isFilled(): Boolean","dev.mokkery.matcher.ArgMatcher.Composite.isFilled"]},{"name":"abstract fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/matches.html","searchKeys":["matches","abstract fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.matches"]},{"name":"abstract fun matchesVarargs(varargs: List<T>): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.Base.matchesVarargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-base/matches-varargs.html","searchKeys":["matchesVarargs","abstract fun matchesVarargs(varargs: List<T>): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.Base.matchesVarargs"]},{"name":"abstract infix fun answers(answer: Answer<T>)","description":"dev.mokkery.answering.AnsweringScope.answers","location":"mokkery-runtime/dev.mokkery.answering/-answering-scope/answers.html","searchKeys":["answers","abstract infix fun answers(answer: Answer<T>)","dev.mokkery.answering.AnsweringScope.answers"]},{"name":"abstract override fun capture(value: T)","description":"dev.mokkery.matcher.ArgMatcher.Composite.capture","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-composite/capture.html","searchKeys":["capture","abstract override fun capture(value: T)","dev.mokkery.matcher.ArgMatcher.Composite.capture"]},{"name":"abstract override val values: List<T>","description":"dev.mokkery.matcher.capture.SlotCapture.values","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/values.html","searchKeys":["values","abstract override val values: List<T>","dev.mokkery.matcher.capture.SlotCapture.values"]},{"name":"abstract suspend fun callOriginal(): R","description":"dev.mokkery.answering.SuspendCallDefinitionScope.callOriginal","location":"mokkery-runtime/dev.mokkery.answering/-suspend-call-definition-scope/call-original.html","searchKeys":["callOriginal","abstract suspend fun callOriginal(): R","dev.mokkery.answering.SuspendCallDefinitionScope.callOriginal"]},{"name":"abstract suspend fun callOriginalWith(vararg args: Any?): R","description":"dev.mokkery.answering.SuspendCallDefinitionScope.callOriginalWith","location":"mokkery-runtime/dev.mokkery.answering/-suspend-call-definition-scope/call-original-with.html","searchKeys":["callOriginalWith","abstract suspend fun callOriginalWith(vararg args: Any?): R","dev.mokkery.answering.SuspendCallDefinitionScope.callOriginalWith"]},{"name":"abstract suspend fun callSuper(type: KClass<*>): R","description":"dev.mokkery.answering.SuspendCallDefinitionScope.callSuper","location":"mokkery-runtime/dev.mokkery.answering/-suspend-call-definition-scope/call-super.html","searchKeys":["callSuper","abstract suspend fun callSuper(type: KClass<*>): R","dev.mokkery.answering.SuspendCallDefinitionScope.callSuper"]},{"name":"abstract suspend fun callSuperWith(type: KClass<*>, vararg args: Any?): R","description":"dev.mokkery.answering.SuspendCallDefinitionScope.callSuperWith","location":"mokkery-runtime/dev.mokkery.answering/-suspend-call-definition-scope/call-super-with.html","searchKeys":["callSuperWith","abstract suspend fun callSuperWith(type: KClass<*>, vararg args: Any?): R","dev.mokkery.answering.SuspendCallDefinitionScope.callSuperWith"]},{"name":"abstract val returnType: KClass<*>","description":"dev.mokkery.answering.CallDefinitionScope.returnType","location":"mokkery-runtime/dev.mokkery.answering/-call-definition-scope/return-type.html","searchKeys":["returnType","abstract val returnType: KClass<*>","dev.mokkery.answering.CallDefinitionScope.returnType"]},{"name":"abstract val self: Any?","description":"dev.mokkery.answering.CallDefinitionScope.self","location":"mokkery-runtime/dev.mokkery.answering/-call-definition-scope/self.html","searchKeys":["self","abstract val self: Any?","dev.mokkery.answering.CallDefinitionScope.self"]},{"name":"abstract val value: SlotCapture.Value<T>","description":"dev.mokkery.matcher.capture.SlotCapture.value","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/value.html","searchKeys":["value","abstract val value: SlotCapture.Value<T>","dev.mokkery.matcher.capture.SlotCapture.value"]},{"name":"abstract val values: List<T>","description":"dev.mokkery.matcher.capture.ContainerCapture.values","location":"mokkery-runtime/dev.mokkery.matcher.capture/-container-capture/values.html","searchKeys":["values","abstract val values: List<T>","dev.mokkery.matcher.capture.ContainerCapture.values"]},{"name":"class CallArgs(val args: List<Any?>)","description":"dev.mokkery.answering.CallArgs","location":"mokkery-runtime/dev.mokkery.answering/-call-args/index.html","searchKeys":["CallArgs","class CallArgs(val args: List<Any?>)","dev.mokkery.answering.CallArgs"]},{"name":"class CaptureMatcher<T>(capture: Capture<T>, matcher: ArgMatcher<T>? = null) : ArgMatcher.Composite<T> ","description":"dev.mokkery.matcher.capture.CaptureMatcher","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/index.html","searchKeys":["CaptureMatcher","class CaptureMatcher<T>(capture: Capture<T>, matcher: ArgMatcher<T>? = null) : ArgMatcher.Composite<T> ","dev.mokkery.matcher.capture.CaptureMatcher"]},{"name":"class ContentEquals(array: Any) : ArgMatcher<Any> ","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-equals/index.html","searchKeys":["ContentEquals","class ContentEquals(array: Any) : ArgMatcher<Any> ","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals"]},{"name":"class FunctionScope","description":"dev.mokkery.answering.FunctionScope","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/index.html","searchKeys":["FunctionScope","class FunctionScope","dev.mokkery.answering.FunctionScope"]},{"name":"constructor()","description":"dev.mokkery.matcher.varargs.VarArgMatcher.Base.Base","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-base/-base.html","searchKeys":["Base","constructor()","dev.mokkery.matcher.varargs.VarArgMatcher.Base.Base"]},{"name":"constructor(args: List<Any?>)","description":"dev.mokkery.answering.CallArgs.CallArgs","location":"mokkery-runtime/dev.mokkery.answering/-call-args/-call-args.html","searchKeys":["CallArgs","constructor(args: List<Any?>)","dev.mokkery.answering.CallArgs.CallArgs"]},{"name":"constructor(args: List<Any?>? = null)","description":"dev.mokkery.answering.SuperCall.Original.Original","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-original/-original.html","searchKeys":["Original","constructor(args: List<Any?>? = null)","dev.mokkery.answering.SuperCall.Original.Original"]},{"name":"constructor(array: Any)","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals.ContentEquals","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-equals/-content-equals.html","searchKeys":["ContentEquals","constructor(array: Any)","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals.ContentEquals"]},{"name":"constructor(array: Array<T>)","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.ContentDeepEquals","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/-content-deep-equals.html","searchKeys":["ContentDeepEquals","constructor(array: Array<T>)","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.ContentDeepEquals"]},{"name":"constructor(block: BlockingCallDefinitionScope<T>.(CallArgs) -> T)","description":"dev.mokkery.answering.Answer.Block.Block","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/-block.html","searchKeys":["Block","constructor(block: BlockingCallDefinitionScope<T>.(CallArgs) -> T)","dev.mokkery.answering.Answer.Block.Block"]},{"name":"constructor(block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T)","description":"dev.mokkery.answering.Answer.BlockSuspend.BlockSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/-block-suspend.html","searchKeys":["BlockSuspend","constructor(block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T)","dev.mokkery.answering.Answer.BlockSuspend.BlockSuspend"]},{"name":"constructor(capture: Capture<T>, matcher: ArgMatcher<T>? = null)","description":"dev.mokkery.matcher.capture.CaptureMatcher.CaptureMatcher","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/-capture-matcher.html","searchKeys":["CaptureMatcher","constructor(capture: Capture<T>, matcher: ArgMatcher<T>? = null)","dev.mokkery.matcher.capture.CaptureMatcher.CaptureMatcher"]},{"name":"constructor(expectedMatchers: Int, matchers: List<ArgMatcher<T>> = emptyList())","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.And","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/-and.html","searchKeys":["And","constructor(expectedMatchers: Int, matchers: List<ArgMatcher<T>> = emptyList())","dev.mokkery.matcher.logical.LogicalMatchers.And.And"]},{"name":"constructor(expectedMatchers: Int, matchers: List<ArgMatcher<T>> = emptyList())","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.Or","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/-or.html","searchKeys":["Or","constructor(expectedMatchers: Int, matchers: List<ArgMatcher<T>> = emptyList())","dev.mokkery.matcher.logical.LogicalMatchers.Or.Or"]},{"name":"constructor(iterable: Iterable<T>)","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.ValueInIterable","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-in-iterable/-value-in-iterable.html","searchKeys":["ValueInIterable","constructor(iterable: Iterable<T>)","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.ValueInIterable"]},{"name":"constructor(iterable: Iterable<T>)","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.ValueNotInIterable","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-not-in-iterable/-value-not-in-iterable.html","searchKeys":["ValueNotInIterable","constructor(iterable: Iterable<T>)","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.ValueNotInIterable"]},{"name":"constructor(iterator: Iterator<Answer<T>>)","description":"dev.mokkery.answering.Answer.SequentialByIterator.SequentialByIterator","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential-by-iterator/-sequential-by-iterator.html","searchKeys":["SequentialByIterator","constructor(iterator: Iterator<Answer<T>>)","dev.mokkery.answering.Answer.SequentialByIterator.SequentialByIterator"]},{"name":"constructor(matcher: ArgMatcher<T & Any>? = null)","description":"dev.mokkery.matcher.nullable.NotNullMatcher.NotNullMatcher","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/-not-null-matcher.html","searchKeys":["NotNullMatcher","constructor(matcher: ArgMatcher<T & Any>? = null)","dev.mokkery.matcher.nullable.NotNullMatcher.NotNullMatcher"]},{"name":"constructor(matcher: ArgMatcher<T>? = null)","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.Not","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/-not.html","searchKeys":["Not","constructor(matcher: ArgMatcher<T>? = null)","dev.mokkery.matcher.logical.LogicalMatchers.Not.Not"]},{"name":"constructor(predicate: (T) -> Boolean, toStringFun: () -> String)","description":"dev.mokkery.matcher.ArgMatcher.Matching.Matching","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/-matching.html","searchKeys":["Matching","constructor(predicate: (T) -> Boolean, toStringFun: () -> String)","dev.mokkery.matcher.ArgMatcher.Matching.Matching"]},{"name":"constructor(throwable: Throwable)","description":"dev.mokkery.answering.Answer.Throws.Throws","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/-throws.html","searchKeys":["Throws","constructor(throwable: Throwable)","dev.mokkery.answering.Answer.Throws.Throws"]},{"name":"constructor(type: KClass<*>)","description":"dev.mokkery.matcher.ArgMatcher.OfType.OfType","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-of-type/-of-type.html","searchKeys":["OfType","constructor(type: KClass<*>)","dev.mokkery.matcher.ArgMatcher.OfType.OfType"]},{"name":"constructor(type: KClass<*>)","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.AnyOf","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/-any-of.html","searchKeys":["AnyOf","constructor(type: KClass<*>)","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.AnyOf"]},{"name":"constructor(type: KClass<*>, args: List<Any?>? = null)","description":"dev.mokkery.answering.SuperCall.OfType.OfType","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-of-type/-of-type.html","searchKeys":["OfType","constructor(type: KClass<*>, args: List<Any?>? = null)","dev.mokkery.answering.SuperCall.OfType.OfType"]},{"name":"constructor(type: KClass<*>, predicate: (T) -> Boolean)","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.AllThat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/-all-that.html","searchKeys":["AllThat","constructor(type: KClass<*>, predicate: (T) -> Boolean)","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.AllThat"]},{"name":"constructor(type: KClass<*>, predicate: (T) -> Boolean)","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat.AnyThat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-that/-any-that.html","searchKeys":["AnyThat","constructor(type: KClass<*>, predicate: (T) -> Boolean)","dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat.AnyThat"]},{"name":"constructor(value: T)","description":"dev.mokkery.answering.Answer.Const.Const","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/-const.html","searchKeys":["Const","constructor(value: T)","dev.mokkery.answering.Answer.Const.Const"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.Equals.Equals","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/-equals.html","searchKeys":["Equals","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.Equals.Equals"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.EqualsRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/-equals-ref.html","searchKeys":["EqualsRef","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.EqualsRef.EqualsRef"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.NotEqual","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/-not-equal.html","searchKeys":["NotEqual","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.NotEqual.NotEqual"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.NotEqualRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/-not-equal-ref.html","searchKeys":["NotEqualRef","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.NotEqualRef.NotEqualRef"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.capture.SlotCapture.Value.Present.Present","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/-value/-present/-present.html","searchKeys":["Present","constructor(value: T)","dev.mokkery.matcher.capture.SlotCapture.Value.Present.Present"]},{"name":"constructor(value: T, type: ArgMatcher.Comparing.Type)","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Comparing","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-comparing.html","searchKeys":["Comparing","constructor(value: T, type: ArgMatcher.Comparing.Type)","dev.mokkery.matcher.ArgMatcher.Comparing.Comparing"]},{"name":"data class AllThat<T>(type: KClass<*>, predicate: (T) -> Boolean) : VarArgMatcher.Base<T> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/index.html","searchKeys":["AllThat","data class AllThat<T>(type: KClass<*>, predicate: (T) -> Boolean) : VarArgMatcher.Base<T> ","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat"]},{"name":"data class And<T>(val expectedMatchers: Int, val matchers: List<ArgMatcher<T>> = emptyList()) : ArgMatcher.Composite<T> ","description":"dev.mokkery.matcher.logical.LogicalMatchers.And","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/index.html","searchKeys":["And","data class And<T>(val expectedMatchers: Int, val matchers: List<ArgMatcher<T>> = emptyList()) : ArgMatcher.Composite<T> ","dev.mokkery.matcher.logical.LogicalMatchers.And"]},{"name":"data class AnyOf(type: KClass<*>) : VarArgMatcher.Base<Any?> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/index.html","searchKeys":["AnyOf","data class AnyOf(type: KClass<*>) : VarArgMatcher.Base<Any?> ","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf"]},{"name":"data class AnyThat<T>(type: KClass<*>, predicate: (T) -> Boolean) : VarArgMatcher.Base<T> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-that/index.html","searchKeys":["AnyThat","data class AnyThat<T>(type: KClass<*>, predicate: (T) -> Boolean) : VarArgMatcher.Base<T> ","dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat"]},{"name":"data class Block<T>(val block: BlockingCallDefinitionScope<T>.(CallArgs) -> T) : Answer<T> ","description":"dev.mokkery.answering.Answer.Block","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/index.html","searchKeys":["Block","data class Block<T>(val block: BlockingCallDefinitionScope<T>.(CallArgs) -> T) : Answer<T> ","dev.mokkery.answering.Answer.Block"]},{"name":"data class BlockSuspend<T>(val block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T) : Answer.Suspending<T> ","description":"dev.mokkery.answering.Answer.BlockSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/index.html","searchKeys":["BlockSuspend","data class BlockSuspend<T>(val block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T) : Answer.Suspending<T> ","dev.mokkery.answering.Answer.BlockSuspend"]},{"name":"data class Comparing<T : Comparable<T>>(val value: T, val type: ArgMatcher.Comparing.Type) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.Comparing","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/index.html","searchKeys":["Comparing","data class Comparing<T : Comparable<T>>(val value: T, val type: ArgMatcher.Comparing.Type) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.Comparing"]},{"name":"data class Const<T>(val value: T) : Answer<T> ","description":"dev.mokkery.answering.Answer.Const","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/index.html","searchKeys":["Const","data class Const<T>(val value: T) : Answer<T> ","dev.mokkery.answering.Answer.Const"]},{"name":"data class ContentDeepEquals<T>(val array: Array<T>) : ArgMatcher<Array<T>> ","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/index.html","searchKeys":["ContentDeepEquals","data class ContentDeepEquals<T>(val array: Array<T>) : ArgMatcher<Array<T>> ","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals"]},{"name":"data class Equals<T>(val value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.Equals","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/index.html","searchKeys":["Equals","data class Equals<T>(val value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.Equals"]},{"name":"data class EqualsRef<T>(val value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/index.html","searchKeys":["EqualsRef","data class EqualsRef<T>(val value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.EqualsRef"]},{"name":"data class Matching<T>(val predicate: (T) -> Boolean, val toStringFun: () -> String) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.Matching","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/index.html","searchKeys":["Matching","data class Matching<T>(val predicate: (T) -> Boolean, val toStringFun: () -> String) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.Matching"]},{"name":"data class Not<T>(val matcher: ArgMatcher<T>? = null) : ArgMatcher.Composite<T> ","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/index.html","searchKeys":["Not","data class Not<T>(val matcher: ArgMatcher<T>? = null) : ArgMatcher.Composite<T> ","dev.mokkery.matcher.logical.LogicalMatchers.Not"]},{"name":"data class NotEqual<T>(val value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.NotEqual","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/index.html","searchKeys":["NotEqual","data class NotEqual<T>(val value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.NotEqual"]},{"name":"data class NotEqualRef<T>(val value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/index.html","searchKeys":["NotEqualRef","data class NotEqualRef<T>(val value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.NotEqualRef"]},{"name":"data class NotNullMatcher<T>(val matcher: ArgMatcher<T & Any>? = null) : ArgMatcher.Composite<T> ","description":"dev.mokkery.matcher.nullable.NotNullMatcher","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/index.html","searchKeys":["NotNullMatcher","data class NotNullMatcher<T>(val matcher: ArgMatcher<T & Any>? = null) : ArgMatcher.Composite<T> ","dev.mokkery.matcher.nullable.NotNullMatcher"]},{"name":"data class OfType(val type: KClass<*>, val args: List<Any?>? = null) : SuperCall","description":"dev.mokkery.answering.SuperCall.OfType","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-of-type/index.html","searchKeys":["OfType","data class OfType(val type: KClass<*>, val args: List<Any?>? = null) : SuperCall","dev.mokkery.answering.SuperCall.OfType"]},{"name":"data class OfType<T>(val type: KClass<*>) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.OfType","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-of-type/index.html","searchKeys":["OfType","data class OfType<T>(val type: KClass<*>) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.OfType"]},{"name":"data class Or<T>(val expectedMatchers: Int, val matchers: List<ArgMatcher<T>> = emptyList()) : ArgMatcher.Composite<T> ","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/index.html","searchKeys":["Or","data class Or<T>(val expectedMatchers: Int, val matchers: List<ArgMatcher<T>> = emptyList()) : ArgMatcher.Composite<T> ","dev.mokkery.matcher.logical.LogicalMatchers.Or"]},{"name":"data class Original(val args: List<Any?>? = null) : SuperCall","description":"dev.mokkery.answering.SuperCall.Original","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-original/index.html","searchKeys":["Original","data class Original(val args: List<Any?>? = null) : SuperCall","dev.mokkery.answering.SuperCall.Original"]},{"name":"data class Present<out T>(val value: T) : SlotCapture.Value<T> ","description":"dev.mokkery.matcher.capture.SlotCapture.Value.Present","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/-value/-present/index.html","searchKeys":["Present","data class Present<out T>(val value: T) : SlotCapture.Value<T> ","dev.mokkery.matcher.capture.SlotCapture.Value.Present"]},{"name":"data class SequentialByIterator<T>(val iterator: Iterator<Answer<T>>) : Answer.Sequential<T> ","description":"dev.mokkery.answering.Answer.SequentialByIterator","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential-by-iterator/index.html","searchKeys":["SequentialByIterator","data class SequentialByIterator<T>(val iterator: Iterator<Answer<T>>) : Answer.Sequential<T> ","dev.mokkery.answering.Answer.SequentialByIterator"]},{"name":"data class Throws(val throwable: Throwable) : Answer<Nothing> ","description":"dev.mokkery.answering.Answer.Throws","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/index.html","searchKeys":["Throws","data class Throws(val throwable: Throwable) : Answer<Nothing> ","dev.mokkery.answering.Answer.Throws"]},{"name":"data class ValueInIterable<T>(val iterable: Iterable<T>) : ArgMatcher<T> ","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-in-iterable/index.html","searchKeys":["ValueInIterable","data class ValueInIterable<T>(val iterable: Iterable<T>) : ArgMatcher<T> ","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable"]},{"name":"data class ValueNotInIterable<T>(val iterable: Iterable<T>) : ArgMatcher<T> ","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-not-in-iterable/index.html","searchKeys":["ValueNotInIterable","data class ValueNotInIterable<T>(val iterable: Iterable<T>) : ArgMatcher<T> ","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable"]},{"name":"enum Type : Enum<ArgMatcher.Comparing.Type> ","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/index.html","searchKeys":["Type","enum Type : Enum<ArgMatcher.Comparing.Type> ","dev.mokkery.matcher.ArgMatcher.Comparing.Type"]},{"name":"fun <T> ArgMatcher<T>.propagateCapture(value: T)","description":"dev.mokkery.matcher.capture.propagateCapture","location":"mokkery-runtime/dev.mokkery.matcher.capture/propagate-capture.html","searchKeys":["propagateCapture","fun <T> ArgMatcher<T>.propagateCapture(value: T)","dev.mokkery.matcher.capture.propagateCapture"]},{"name":"fun <T> BlockingSequentialAnswerBuilder<T>.repeat(block: BlockingSequentialAnswerBuilder<T>.() -> Unit): Nothing","description":"dev.mokkery.answering.repeat","location":"mokkery-runtime/dev.mokkery.answering/repeat.html","searchKeys":["repeat","fun <T> BlockingSequentialAnswerBuilder<T>.repeat(block: BlockingSequentialAnswerBuilder<T>.() -> Unit): Nothing","dev.mokkery.answering.repeat"]},{"name":"fun <T> List<ArgMatcher<T>>.propagateCapture(value: T)","description":"dev.mokkery.matcher.capture.propagateCapture","location":"mokkery-runtime/dev.mokkery.matcher.capture/propagate-capture.html","searchKeys":["propagateCapture","fun <T> List<ArgMatcher<T>>.propagateCapture(value: T)","dev.mokkery.matcher.capture.propagateCapture"]},{"name":"fun <T> MutableList<T>.asCapture(): Capture<T>","description":"dev.mokkery.matcher.capture.asCapture","location":"mokkery-runtime/dev.mokkery.matcher.capture/as-capture.html","searchKeys":["asCapture","fun <T> MutableList<T>.asCapture(): Capture<T>","dev.mokkery.matcher.capture.asCapture"]},{"name":"fun <T> SlotCapture<T>.get(): T","description":"dev.mokkery.matcher.capture.get","location":"mokkery-runtime/dev.mokkery.matcher.capture/get.html","searchKeys":["get","fun <T> SlotCapture<T>.get(): T","dev.mokkery.matcher.capture.get"]},{"name":"fun <T> SlotCapture<T>.getIfPresent(): T?","description":"dev.mokkery.matcher.capture.getIfPresent","location":"mokkery-runtime/dev.mokkery.matcher.capture/get-if-present.html","searchKeys":["getIfPresent","fun <T> SlotCapture<T>.getIfPresent(): T?","dev.mokkery.matcher.capture.getIfPresent"]},{"name":"fun <T> SuspendSequentialAnswerBuilder<T>.repeat(block: SuspendSequentialAnswerBuilder<T>.() -> Unit): Nothing","description":"dev.mokkery.answering.repeat","location":"mokkery-runtime/dev.mokkery.answering/repeat.html","searchKeys":["repeat","fun <T> SuspendSequentialAnswerBuilder<T>.repeat(block: SuspendSequentialAnswerBuilder<T>.() -> Unit): Nothing","dev.mokkery.answering.repeat"]},{"name":"fun <T> callback(capture: Capture<T> = void(), callback: (T) -> Unit): Capture<T>","description":"dev.mokkery.matcher.capture.Capture.Companion.callback","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/-companion/callback.html","searchKeys":["callback","fun <T> callback(capture: Capture<T> = void(), callback: (T) -> Unit): Capture<T>","dev.mokkery.matcher.capture.Capture.Companion.callback"]},{"name":"fun <T> container(): ContainerCapture<T>","description":"dev.mokkery.matcher.capture.Capture.Companion.container","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/-companion/container.html","searchKeys":["container","fun <T> container(): ContainerCapture<T>","dev.mokkery.matcher.capture.Capture.Companion.container"]},{"name":"fun <T> every(block: ArgMatchersScope.() -> T): BlockingAnsweringScope<T>","description":"dev.mokkery.every","location":"mokkery-runtime/dev.mokkery/every.html","searchKeys":["every","fun <T> every(block: ArgMatchersScope.() -> T): BlockingAnsweringScope<T>","dev.mokkery.every"]},{"name":"fun <T> everySuspend(block: suspend ArgMatchersScope.() -> T): SuspendAnsweringScope<T>","description":"dev.mokkery.everySuspend","location":"mokkery-runtime/dev.mokkery/every-suspend.html","searchKeys":["everySuspend","fun <T> everySuspend(block: suspend ArgMatchersScope.() -> T): SuspendAnsweringScope<T>","dev.mokkery.everySuspend"]},{"name":"fun <T> slot(): SlotCapture<T>","description":"dev.mokkery.matcher.capture.Capture.Companion.slot","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/-companion/slot.html","searchKeys":["slot","fun <T> slot(): SlotCapture<T>","dev.mokkery.matcher.capture.Capture.Companion.slot"]},{"name":"fun <T> void(): Capture<T>","description":"dev.mokkery.matcher.capture.Capture.Companion.void","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/-companion/void.html","searchKeys":["void","fun <T> void(): Capture<T>","dev.mokkery.matcher.capture.Capture.Companion.void"]},{"name":"fun ArgMatchersScope.contentEq(array: BooleanArray): BooleanArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: BooleanArray): BooleanArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: ByteArray): ByteArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: ByteArray): ByteArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: CharArray): CharArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: CharArray): CharArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: DoubleArray): DoubleArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: DoubleArray): DoubleArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: FloatArray): FloatArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: FloatArray): FloatArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: IntArray): IntArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: IntArray): IntArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: LongArray): LongArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: LongArray): LongArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: ShortArray): ShortArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: ShortArray): ShortArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: UByteArray): UByteArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: UByteArray): UByteArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: UIntArray): UIntArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: UIntArray): UIntArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: ULongArray): ULongArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: ULongArray): ULongArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun ArgMatchersScope.contentEq(array: UShortArray): UShortArray","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","fun ArgMatchersScope.contentEq(array: UShortArray): UShortArray","dev.mokkery.matcher.collections.contentEq"]},{"name":"fun callOriginal(args: List<Any?>): Any?","description":"dev.mokkery.answering.FunctionScope.callOriginal","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/call-original.html","searchKeys":["callOriginal","fun callOriginal(args: List<Any?>): Any?","dev.mokkery.answering.FunctionScope.callOriginal"]},{"name":"fun callSuper(superType: KClass<*>, args: List<Any?>): Any?","description":"dev.mokkery.answering.FunctionScope.callSuper","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/call-super.html","searchKeys":["callSuper","fun callSuper(superType: KClass<*>, args: List<Any?>): Any?","dev.mokkery.answering.FunctionScope.callSuper"]},{"name":"fun interface ArgMatcher<in T>","description":"dev.mokkery.matcher.ArgMatcher","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/index.html","searchKeys":["ArgMatcher","fun interface ArgMatcher<in T>","dev.mokkery.matcher.ArgMatcher"]},{"name":"fun mokkeryDebugString(obj: Any): String","description":"dev.mokkery.debug.mokkeryDebugString","location":"mokkery-runtime/dev.mokkery.debug/mokkery-debug-string.html","searchKeys":["mokkeryDebugString","fun mokkeryDebugString(obj: Any): String","dev.mokkery.debug.mokkeryDebugString"]},{"name":"fun originalWith(vararg args: Any?): SuperCall","description":"dev.mokkery.answering.SuperCall.Companion.originalWith","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-companion/original-with.html","searchKeys":["originalWith","fun originalWith(vararg args: Any?): SuperCall","dev.mokkery.answering.SuperCall.Companion.originalWith"]},{"name":"fun printMokkeryDebug(obj: Any)","description":"dev.mokkery.debug.printMokkeryDebug","location":"mokkery-runtime/dev.mokkery.debug/print-mokkery-debug.html","searchKeys":["printMokkeryDebug","fun printMokkeryDebug(obj: Any)","dev.mokkery.debug.printMokkeryDebug"]},{"name":"fun resetAnswers(vararg mocks: Any)","description":"dev.mokkery.resetAnswers","location":"mokkery-runtime/dev.mokkery/reset-answers.html","searchKeys":["resetAnswers","fun resetAnswers(vararg mocks: Any)","dev.mokkery.resetAnswers"]},{"name":"fun resetCalls(vararg mocks: Any)","description":"dev.mokkery.resetCalls","location":"mokkery-runtime/dev.mokkery/reset-calls.html","searchKeys":["resetCalls","fun resetCalls(vararg mocks: Any)","dev.mokkery.resetCalls"]},{"name":"fun valueOf(value: String): ArgMatcher.Comparing.Type","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.valueOf","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ArgMatcher.Comparing.Type","dev.mokkery.matcher.ArgMatcher.Comparing.Type.valueOf"]},{"name":"fun values(): Array<ArgMatcher.Comparing.Type>","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.values","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/values.html","searchKeys":["values","fun values(): Array<ArgMatcher.Comparing.Type>","dev.mokkery.matcher.ArgMatcher.Comparing.Type.values"]},{"name":"fun verify(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: ArgMatchersScope.() -> Unit)","description":"dev.mokkery.verify","location":"mokkery-runtime/dev.mokkery/verify.html","searchKeys":["verify","fun verify(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: ArgMatchersScope.() -> Unit)","dev.mokkery.verify"]},{"name":"fun verifyNoMoreCalls(vararg mocks: Any)","description":"dev.mokkery.verifyNoMoreCalls","location":"mokkery-runtime/dev.mokkery/verify-no-more-calls.html","searchKeys":["verifyNoMoreCalls","fun verifyNoMoreCalls(vararg mocks: Any)","dev.mokkery.verifyNoMoreCalls"]},{"name":"fun verifySuspend(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: suspend ArgMatchersScope.() -> Unit)","description":"dev.mokkery.verifySuspend","location":"mokkery-runtime/dev.mokkery/verify-suspend.html","searchKeys":["verifySuspend","fun verifySuspend(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: suspend ArgMatchersScope.() -> Unit)","dev.mokkery.verifySuspend"]},{"name":"infix fun <T> AnsweringScope<T>.calls(superCall: SuperCall)","description":"dev.mokkery.answering.calls","location":"mokkery-runtime/dev.mokkery.answering/calls.html","searchKeys":["calls","infix fun <T> AnsweringScope<T>.calls(superCall: SuperCall)","dev.mokkery.answering.calls"]},{"name":"infix fun <T> AnsweringScope<T>.returns(value: T)","description":"dev.mokkery.answering.returns","location":"mokkery-runtime/dev.mokkery.answering/returns.html","searchKeys":["returns","infix fun <T> AnsweringScope<T>.returns(value: T)","dev.mokkery.answering.returns"]},{"name":"infix fun <T> AnsweringScope<T>.sequentiallyReturns(values: Iterable<T>)","description":"dev.mokkery.answering.sequentiallyReturns","location":"mokkery-runtime/dev.mokkery.answering/sequentially-returns.html","searchKeys":["sequentiallyReturns","infix fun <T> AnsweringScope<T>.sequentiallyReturns(values: Iterable<T>)","dev.mokkery.answering.sequentiallyReturns"]},{"name":"infix fun <T> AnsweringScope<T>.sequentiallyThrows(errors: Iterable<Throwable>)","description":"dev.mokkery.answering.sequentiallyThrows","location":"mokkery-runtime/dev.mokkery.answering/sequentially-throws.html","searchKeys":["sequentiallyThrows","infix fun <T> AnsweringScope<T>.sequentiallyThrows(errors: Iterable<Throwable>)","dev.mokkery.answering.sequentiallyThrows"]},{"name":"infix fun <T> AnsweringScope<T>.throws(error: Throwable)","description":"dev.mokkery.answering.throws","location":"mokkery-runtime/dev.mokkery.answering/throws.html","searchKeys":["throws","infix fun <T> AnsweringScope<T>.throws(error: Throwable)","dev.mokkery.answering.throws"]},{"name":"infix fun <T> AnsweringScope<T>.throwsErrorWith(message: Any)","description":"dev.mokkery.answering.throwsErrorWith","location":"mokkery-runtime/dev.mokkery.answering/throws-error-with.html","searchKeys":["throwsErrorWith","infix fun <T> AnsweringScope<T>.throwsErrorWith(message: Any)","dev.mokkery.answering.throwsErrorWith"]},{"name":"infix fun <T> BlockingAnsweringScope<T>.calls(block: BlockingCallDefinitionScope<T>.(CallArgs) -> T)","description":"dev.mokkery.answering.calls","location":"mokkery-runtime/dev.mokkery.answering/calls.html","searchKeys":["calls","infix fun <T> BlockingAnsweringScope<T>.calls(block: BlockingCallDefinitionScope<T>.(CallArgs) -> T)","dev.mokkery.answering.calls"]},{"name":"infix fun <T> BlockingAnsweringScope<T>.sequentially(block: BlockingSequentialAnswerBuilder<T>.() -> Unit)","description":"dev.mokkery.answering.sequentially","location":"mokkery-runtime/dev.mokkery.answering/sequentially.html","searchKeys":["sequentially","infix fun <T> BlockingAnsweringScope<T>.sequentially(block: BlockingSequentialAnswerBuilder<T>.() -> Unit)","dev.mokkery.answering.sequentially"]},{"name":"infix fun <T> BlockingAnsweringScope<T>.sequentiallyRepeat(block: BlockingSequentialAnswerBuilder<T>.() -> Unit)","description":"dev.mokkery.answering.sequentiallyRepeat","location":"mokkery-runtime/dev.mokkery.answering/sequentially-repeat.html","searchKeys":["sequentiallyRepeat","infix fun <T> BlockingAnsweringScope<T>.sequentiallyRepeat(block: BlockingSequentialAnswerBuilder<T>.() -> Unit)","dev.mokkery.answering.sequentiallyRepeat"]},{"name":"infix fun <T> SuspendAnsweringScope<T>.calls(block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T)","description":"dev.mokkery.answering.calls","location":"mokkery-runtime/dev.mokkery.answering/calls.html","searchKeys":["calls","infix fun <T> SuspendAnsweringScope<T>.calls(block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T)","dev.mokkery.answering.calls"]},{"name":"infix fun <T> SuspendAnsweringScope<T>.sequentially(block: SuspendSequentialAnswerBuilder<T>.() -> Unit)","description":"dev.mokkery.answering.sequentially","location":"mokkery-runtime/dev.mokkery.answering/sequentially.html","searchKeys":["sequentially","infix fun <T> SuspendAnsweringScope<T>.sequentially(block: SuspendSequentialAnswerBuilder<T>.() -> Unit)","dev.mokkery.answering.sequentially"]},{"name":"infix fun <T> SuspendSequentialAnswerBuilder<T>.sequentiallyRepeat(block: SuspendSequentialAnswerBuilder<T>.() -> Unit)","description":"dev.mokkery.answering.sequentiallyRepeat","location":"mokkery-runtime/dev.mokkery.answering/sequentially-repeat.html","searchKeys":["sequentiallyRepeat","infix fun <T> SuspendSequentialAnswerBuilder<T>.sequentiallyRepeat(block: SuspendSequentialAnswerBuilder<T>.() -> Unit)","dev.mokkery.answering.sequentiallyRepeat"]},{"name":"inline fun <T : Any> ArgMatchersScope.notNull(matcher: T = any()): T?","description":"dev.mokkery.matcher.nullable.notNull","location":"mokkery-runtime/dev.mokkery.matcher.nullable/not-null.html","searchKeys":["notNull","inline fun <T : Any> ArgMatchersScope.notNull(matcher: T = any()): T?","dev.mokkery.matcher.nullable.notNull"]},{"name":"inline fun <T : Any> mock(mode: MockMode = MokkeryCompilerDefaults.mockMode, block: T.() -> Unit = { }): T","description":"dev.mokkery.mock","location":"mokkery-runtime/dev.mokkery/mock.html","searchKeys":["mock","inline fun <T : Any> mock(mode: MockMode = MokkeryCompilerDefaults.mockMode, block: T.() -> Unit = { }): T","dev.mokkery.mock"]},{"name":"inline fun <T : Any> spy(obj: T): T","description":"dev.mokkery.spy","location":"mokkery-runtime/dev.mokkery/spy.html","searchKeys":["spy","inline fun <T : Any> spy(obj: T): T","dev.mokkery.spy"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.gt(value: T): T","description":"dev.mokkery.matcher.gt","location":"mokkery-runtime/dev.mokkery.matcher/gt.html","searchKeys":["gt","inline fun <T : Comparable<T>> ArgMatchersScope.gt(value: T): T","dev.mokkery.matcher.gt"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.gte(value: T): T","description":"dev.mokkery.matcher.gte","location":"mokkery-runtime/dev.mokkery.matcher/gte.html","searchKeys":["gte","inline fun <T : Comparable<T>> ArgMatchersScope.gte(value: T): T","dev.mokkery.matcher.gte"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.lt(value: T): T","description":"dev.mokkery.matcher.lt","location":"mokkery-runtime/dev.mokkery.matcher/lt.html","searchKeys":["lt","inline fun <T : Comparable<T>> ArgMatchersScope.lt(value: T): T","dev.mokkery.matcher.lt"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.lte(value: T): T","description":"dev.mokkery.matcher.lte","location":"mokkery-runtime/dev.mokkery.matcher/lte.html","searchKeys":["lte","inline fun <T : Comparable<T>> ArgMatchersScope.lte(value: T): T","dev.mokkery.matcher.lte"]},{"name":"inline fun <T> ArgMatchersScope.and(first: T, second: T, vararg moreMatchers: T): T","description":"dev.mokkery.matcher.logical.and","location":"mokkery-runtime/dev.mokkery.matcher.logical/and.html","searchKeys":["and","inline fun <T> ArgMatchersScope.and(first: T, second: T, vararg moreMatchers: T): T","dev.mokkery.matcher.logical.and"]},{"name":"inline fun <T> ArgMatchersScope.any(): T","description":"dev.mokkery.matcher.any","location":"mokkery-runtime/dev.mokkery.matcher/any.html","searchKeys":["any","inline fun <T> ArgMatchersScope.any(): T","dev.mokkery.matcher.any"]},{"name":"inline fun <T> ArgMatchersScope.anyVarargs(): Array<T>","description":"dev.mokkery.matcher.varargs.anyVarargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs.html","searchKeys":["anyVarargs","inline fun <T> ArgMatchersScope.anyVarargs(): Array<T>","dev.mokkery.matcher.varargs.anyVarargs"]},{"name":"inline fun <T> ArgMatchersScope.capture(container: Capture<T>, matcher: T = any()): T","description":"dev.mokkery.matcher.capture.capture","location":"mokkery-runtime/dev.mokkery.matcher.capture/capture.html","searchKeys":["capture","inline fun <T> ArgMatchersScope.capture(container: Capture<T>, matcher: T = any()): T","dev.mokkery.matcher.capture.capture"]},{"name":"inline fun <T> ArgMatchersScope.capture(list: MutableList<T>, matcher: T = any()): T","description":"dev.mokkery.matcher.capture.capture","location":"mokkery-runtime/dev.mokkery.matcher.capture/capture.html","searchKeys":["capture","inline fun <T> ArgMatchersScope.capture(list: MutableList<T>, matcher: T = any()): T","dev.mokkery.matcher.capture.capture"]},{"name":"inline fun <T> ArgMatchersScope.contentDeepEq(array: Array<T>): Array<T>","description":"dev.mokkery.matcher.collections.contentDeepEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-deep-eq.html","searchKeys":["contentDeepEq","inline fun <T> ArgMatchersScope.contentDeepEq(array: Array<T>): Array<T>","dev.mokkery.matcher.collections.contentDeepEq"]},{"name":"inline fun <T> ArgMatchersScope.contentEq(array: Array<T>): Array<T>","description":"dev.mokkery.matcher.collections.contentEq","location":"mokkery-runtime/dev.mokkery.matcher.collections/content-eq.html","searchKeys":["contentEq","inline fun <T> ArgMatchersScope.contentEq(array: Array<T>): Array<T>","dev.mokkery.matcher.collections.contentEq"]},{"name":"inline fun <T> ArgMatchersScope.eq(value: T): T","description":"dev.mokkery.matcher.eq","location":"mokkery-runtime/dev.mokkery.matcher/eq.html","searchKeys":["eq","inline fun <T> ArgMatchersScope.eq(value: T): T","dev.mokkery.matcher.eq"]},{"name":"inline fun <T> ArgMatchersScope.eqRef(value: T): T","description":"dev.mokkery.matcher.eqRef","location":"mokkery-runtime/dev.mokkery.matcher/eq-ref.html","searchKeys":["eqRef","inline fun <T> ArgMatchersScope.eqRef(value: T): T","dev.mokkery.matcher.eqRef"]},{"name":"inline fun <T> ArgMatchersScope.isIn(values: Iterable<T>): T","description":"dev.mokkery.matcher.collections.isIn","location":"mokkery-runtime/dev.mokkery.matcher.collections/is-in.html","searchKeys":["isIn","inline fun <T> ArgMatchersScope.isIn(values: Iterable<T>): T","dev.mokkery.matcher.collections.isIn"]},{"name":"inline fun <T> ArgMatchersScope.isIn(vararg values: T): T","description":"dev.mokkery.matcher.collections.isIn","location":"mokkery-runtime/dev.mokkery.matcher.collections/is-in.html","searchKeys":["isIn","inline fun <T> ArgMatchersScope.isIn(vararg values: T): T","dev.mokkery.matcher.collections.isIn"]},{"name":"inline fun <T> ArgMatchersScope.isNotIn(values: Iterable<T>): T","description":"dev.mokkery.matcher.collections.isNotIn","location":"mokkery-runtime/dev.mokkery.matcher.collections/is-not-in.html","searchKeys":["isNotIn","inline fun <T> ArgMatchersScope.isNotIn(values: Iterable<T>): T","dev.mokkery.matcher.collections.isNotIn"]},{"name":"inline fun <T> ArgMatchersScope.isNotIn(vararg values: T): T","description":"dev.mokkery.matcher.collections.isNotIn","location":"mokkery-runtime/dev.mokkery.matcher.collections/is-not-in.html","searchKeys":["isNotIn","inline fun <T> ArgMatchersScope.isNotIn(vararg values: T): T","dev.mokkery.matcher.collections.isNotIn"]},{"name":"inline fun <T> ArgMatchersScope.matches(matcher: ArgMatcher<T>): T","description":"dev.mokkery.matcher.matches","location":"mokkery-runtime/dev.mokkery.matcher/matches.html","searchKeys":["matches","inline fun <T> ArgMatchersScope.matches(matcher: ArgMatcher<T>): T","dev.mokkery.matcher.matches"]},{"name":"inline fun <T> ArgMatchersScope.matching(noinline toString: () -> String = { \"matching(...)\" }, noinline predicate: (T) -> Boolean): T","description":"dev.mokkery.matcher.matching","location":"mokkery-runtime/dev.mokkery.matcher/matching.html","searchKeys":["matching","inline fun <T> ArgMatchersScope.matching(noinline toString: () -> String = { \"matching(...)\" }, noinline predicate: (T) -> Boolean): T","dev.mokkery.matcher.matching"]},{"name":"inline fun <T> ArgMatchersScope.matchingBy(function: (T) -> Boolean): T","description":"dev.mokkery.matcher.matchingBy","location":"mokkery-runtime/dev.mokkery.matcher/matching-by.html","searchKeys":["matchingBy","inline fun <T> ArgMatchersScope.matchingBy(function: (T) -> Boolean): T","dev.mokkery.matcher.matchingBy"]},{"name":"inline fun <T> ArgMatchersScope.neq(value: T): T","description":"dev.mokkery.matcher.neq","location":"mokkery-runtime/dev.mokkery.matcher/neq.html","searchKeys":["neq","inline fun <T> ArgMatchersScope.neq(value: T): T","dev.mokkery.matcher.neq"]},{"name":"inline fun <T> ArgMatchersScope.neqRef(value: T): T","description":"dev.mokkery.matcher.neqRef","location":"mokkery-runtime/dev.mokkery.matcher/neq-ref.html","searchKeys":["neqRef","inline fun <T> ArgMatchersScope.neqRef(value: T): T","dev.mokkery.matcher.neqRef"]},{"name":"inline fun <T> ArgMatchersScope.not(matcher: T): T","description":"dev.mokkery.matcher.logical.not","location":"mokkery-runtime/dev.mokkery.matcher.logical/not.html","searchKeys":["not","inline fun <T> ArgMatchersScope.not(matcher: T): T","dev.mokkery.matcher.logical.not"]},{"name":"inline fun <T> ArgMatchersScope.ofType(): T","description":"dev.mokkery.matcher.ofType","location":"mokkery-runtime/dev.mokkery.matcher/of-type.html","searchKeys":["ofType","inline fun <T> ArgMatchersScope.ofType(): T","dev.mokkery.matcher.ofType"]},{"name":"inline fun <T> ArgMatchersScope.onArg(matcher: T = any(), noinline block: (T) -> Unit): T","description":"dev.mokkery.matcher.capture.onArg","location":"mokkery-runtime/dev.mokkery.matcher.capture/on-arg.html","searchKeys":["onArg","inline fun <T> ArgMatchersScope.onArg(matcher: T = any(), noinline block: (T) -> Unit): T","dev.mokkery.matcher.capture.onArg"]},{"name":"inline fun <T> ArgMatchersScope.or(first: T, second: T, vararg moreMatchers: T): T","description":"dev.mokkery.matcher.logical.or","location":"mokkery-runtime/dev.mokkery.matcher.logical/or.html","searchKeys":["or","inline fun <T> ArgMatchersScope.or(first: T, second: T, vararg moreMatchers: T): T","dev.mokkery.matcher.logical.or"]},{"name":"inline fun <T> ArgMatchersScope.varargsAll(noinline predicate: (T) -> Boolean): Array<T>","description":"dev.mokkery.matcher.varargs.varargsAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-all.html","searchKeys":["varargsAll","inline fun <T> ArgMatchersScope.varargsAll(noinline predicate: (T) -> Boolean): Array<T>","dev.mokkery.matcher.varargs.varargsAll"]},{"name":"inline fun <T> ArgMatchersScope.varargsAny(noinline predicate: (T) -> Boolean): Array<T>","description":"dev.mokkery.matcher.varargs.varargsAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-any.html","searchKeys":["varargsAny","inline fun <T> ArgMatchersScope.varargsAny(noinline predicate: (T) -> Boolean): Array<T>","dev.mokkery.matcher.varargs.varargsAny"]},{"name":"inline fun <T> CallDefinitionScope<*>.self(): T","description":"dev.mokkery.answering.self","location":"mokkery-runtime/dev.mokkery.answering/self.html","searchKeys":["self","inline fun <T> CallDefinitionScope<*>.self(): T","dev.mokkery.answering.self"]},{"name":"inline fun <T> arg(index: Int): T","description":"dev.mokkery.answering.CallArgs.arg","location":"mokkery-runtime/dev.mokkery.answering/-call-args/arg.html","searchKeys":["arg","inline fun <T> arg(index: Int): T","dev.mokkery.answering.CallArgs.arg"]},{"name":"inline fun <T> arg(index: Int): T","description":"dev.mokkery.answering.FunctionScope.arg","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/arg.html","searchKeys":["arg","inline fun <T> arg(index: Int): T","dev.mokkery.answering.FunctionScope.arg"]},{"name":"inline fun <T> superOf(): SuperCall","description":"dev.mokkery.answering.SuperCall.Companion.superOf","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-companion/super-of.html","searchKeys":["superOf","inline fun <T> superOf(): SuperCall","dev.mokkery.answering.SuperCall.Companion.superOf"]},{"name":"inline fun <T> superWith(vararg args: Any?): SuperCall","description":"dev.mokkery.answering.SuperCall.Companion.superWith","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-companion/super-with.html","searchKeys":["superWith","inline fun <T> superWith(vararg args: Any?): SuperCall","dev.mokkery.answering.SuperCall.Companion.superWith"]},{"name":"inline fun ArgMatchersScope.anyVarargsBoolean(): BooleanArray","description":"dev.mokkery.matcher.varargs.anyVarargsBoolean","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-boolean.html","searchKeys":["anyVarargsBoolean","inline fun ArgMatchersScope.anyVarargsBoolean(): BooleanArray","dev.mokkery.matcher.varargs.anyVarargsBoolean"]},{"name":"inline fun ArgMatchersScope.anyVarargsByte(): ByteArray","description":"dev.mokkery.matcher.varargs.anyVarargsByte","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-byte.html","searchKeys":["anyVarargsByte","inline fun ArgMatchersScope.anyVarargsByte(): ByteArray","dev.mokkery.matcher.varargs.anyVarargsByte"]},{"name":"inline fun ArgMatchersScope.anyVarargsChar(): CharArray","description":"dev.mokkery.matcher.varargs.anyVarargsChar","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-char.html","searchKeys":["anyVarargsChar","inline fun ArgMatchersScope.anyVarargsChar(): CharArray","dev.mokkery.matcher.varargs.anyVarargsChar"]},{"name":"inline fun ArgMatchersScope.anyVarargsDouble(): DoubleArray","description":"dev.mokkery.matcher.varargs.anyVarargsDouble","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-double.html","searchKeys":["anyVarargsDouble","inline fun ArgMatchersScope.anyVarargsDouble(): DoubleArray","dev.mokkery.matcher.varargs.anyVarargsDouble"]},{"name":"inline fun ArgMatchersScope.anyVarargsFloat(): FloatArray","description":"dev.mokkery.matcher.varargs.anyVarargsFloat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-float.html","searchKeys":["anyVarargsFloat","inline fun ArgMatchersScope.anyVarargsFloat(): FloatArray","dev.mokkery.matcher.varargs.anyVarargsFloat"]},{"name":"inline fun ArgMatchersScope.anyVarargsInt(): IntArray","description":"dev.mokkery.matcher.varargs.anyVarargsInt","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-int.html","searchKeys":["anyVarargsInt","inline fun ArgMatchersScope.anyVarargsInt(): IntArray","dev.mokkery.matcher.varargs.anyVarargsInt"]},{"name":"inline fun ArgMatchersScope.anyVarargsLong(): LongArray","description":"dev.mokkery.matcher.varargs.anyVarargsLong","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-long.html","searchKeys":["anyVarargsLong","inline fun ArgMatchersScope.anyVarargsLong(): LongArray","dev.mokkery.matcher.varargs.anyVarargsLong"]},{"name":"inline fun ArgMatchersScope.anyVarargsShort(): ShortArray","description":"dev.mokkery.matcher.varargs.anyVarargsShort","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-short.html","searchKeys":["anyVarargsShort","inline fun ArgMatchersScope.anyVarargsShort(): ShortArray","dev.mokkery.matcher.varargs.anyVarargsShort"]},{"name":"inline fun ArgMatchersScope.anyVarargsUByte(): UByteArray","description":"dev.mokkery.matcher.varargs.anyVarargsUByte","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-byte.html","searchKeys":["anyVarargsUByte","inline fun ArgMatchersScope.anyVarargsUByte(): UByteArray","dev.mokkery.matcher.varargs.anyVarargsUByte"]},{"name":"inline fun ArgMatchersScope.anyVarargsUInt(): IntArray","description":"dev.mokkery.matcher.varargs.anyVarargsUInt","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-int.html","searchKeys":["anyVarargsUInt","inline fun ArgMatchersScope.anyVarargsUInt(): IntArray","dev.mokkery.matcher.varargs.anyVarargsUInt"]},{"name":"inline fun ArgMatchersScope.anyVarargsULong(): ULongArray","description":"dev.mokkery.matcher.varargs.anyVarargsULong","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-long.html","searchKeys":["anyVarargsULong","inline fun ArgMatchersScope.anyVarargsULong(): ULongArray","dev.mokkery.matcher.varargs.anyVarargsULong"]},{"name":"inline fun ArgMatchersScope.anyVarargsUShort(): UShortArray","description":"dev.mokkery.matcher.varargs.anyVarargsUShort","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-short.html","searchKeys":["anyVarargsUShort","inline fun ArgMatchersScope.anyVarargsUShort(): UShortArray","dev.mokkery.matcher.varargs.anyVarargsUShort"]},{"name":"inline fun ArgMatchersScope.varargsBooleanAll(noinline predicate: (Boolean) -> Boolean): BooleanArray","description":"dev.mokkery.matcher.varargs.varargsBooleanAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-boolean-all.html","searchKeys":["varargsBooleanAll","inline fun ArgMatchersScope.varargsBooleanAll(noinline predicate: (Boolean) -> Boolean): BooleanArray","dev.mokkery.matcher.varargs.varargsBooleanAll"]},{"name":"inline fun ArgMatchersScope.varargsBooleanAny(noinline predicate: (Boolean) -> Boolean): BooleanArray","description":"dev.mokkery.matcher.varargs.varargsBooleanAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-boolean-any.html","searchKeys":["varargsBooleanAny","inline fun ArgMatchersScope.varargsBooleanAny(noinline predicate: (Boolean) -> Boolean): BooleanArray","dev.mokkery.matcher.varargs.varargsBooleanAny"]},{"name":"inline fun ArgMatchersScope.varargsByteAll(noinline predicate: (Byte) -> Boolean): ByteArray","description":"dev.mokkery.matcher.varargs.varargsByteAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-byte-all.html","searchKeys":["varargsByteAll","inline fun ArgMatchersScope.varargsByteAll(noinline predicate: (Byte) -> Boolean): ByteArray","dev.mokkery.matcher.varargs.varargsByteAll"]},{"name":"inline fun ArgMatchersScope.varargsByteAny(noinline predicate: (Byte) -> Boolean): ByteArray","description":"dev.mokkery.matcher.varargs.varargsByteAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-byte-any.html","searchKeys":["varargsByteAny","inline fun ArgMatchersScope.varargsByteAny(noinline predicate: (Byte) -> Boolean): ByteArray","dev.mokkery.matcher.varargs.varargsByteAny"]},{"name":"inline fun ArgMatchersScope.varargsCharAll(noinline predicate: (Short) -> Boolean): CharArray","description":"dev.mokkery.matcher.varargs.varargsCharAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-char-all.html","searchKeys":["varargsCharAll","inline fun ArgMatchersScope.varargsCharAll(noinline predicate: (Short) -> Boolean): CharArray","dev.mokkery.matcher.varargs.varargsCharAll"]},{"name":"inline fun ArgMatchersScope.varargsCharAny(noinline predicate: (Short) -> Boolean): CharArray","description":"dev.mokkery.matcher.varargs.varargsCharAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-char-any.html","searchKeys":["varargsCharAny","inline fun ArgMatchersScope.varargsCharAny(noinline predicate: (Short) -> Boolean): CharArray","dev.mokkery.matcher.varargs.varargsCharAny"]},{"name":"inline fun ArgMatchersScope.varargsDoubleAll(noinline predicate: (Double) -> Boolean): DoubleArray","description":"dev.mokkery.matcher.varargs.varargsDoubleAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-double-all.html","searchKeys":["varargsDoubleAll","inline fun ArgMatchersScope.varargsDoubleAll(noinline predicate: (Double) -> Boolean): DoubleArray","dev.mokkery.matcher.varargs.varargsDoubleAll"]},{"name":"inline fun ArgMatchersScope.varargsDoubleAny(noinline predicate: (Double) -> Boolean): DoubleArray","description":"dev.mokkery.matcher.varargs.varargsDoubleAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-double-any.html","searchKeys":["varargsDoubleAny","inline fun ArgMatchersScope.varargsDoubleAny(noinline predicate: (Double) -> Boolean): DoubleArray","dev.mokkery.matcher.varargs.varargsDoubleAny"]},{"name":"inline fun ArgMatchersScope.varargsFloatAll(noinline predicate: (Float) -> Boolean): FloatArray","description":"dev.mokkery.matcher.varargs.varargsFloatAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-float-all.html","searchKeys":["varargsFloatAll","inline fun ArgMatchersScope.varargsFloatAll(noinline predicate: (Float) -> Boolean): FloatArray","dev.mokkery.matcher.varargs.varargsFloatAll"]},{"name":"inline fun ArgMatchersScope.varargsFloatAny(noinline predicate: (Float) -> Boolean): FloatArray","description":"dev.mokkery.matcher.varargs.varargsFloatAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-float-any.html","searchKeys":["varargsFloatAny","inline fun ArgMatchersScope.varargsFloatAny(noinline predicate: (Float) -> Boolean): FloatArray","dev.mokkery.matcher.varargs.varargsFloatAny"]},{"name":"inline fun ArgMatchersScope.varargsIntAll(noinline predicate: (Int) -> Boolean): IntArray","description":"dev.mokkery.matcher.varargs.varargsIntAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-int-all.html","searchKeys":["varargsIntAll","inline fun ArgMatchersScope.varargsIntAll(noinline predicate: (Int) -> Boolean): IntArray","dev.mokkery.matcher.varargs.varargsIntAll"]},{"name":"inline fun ArgMatchersScope.varargsIntAny(noinline predicate: (Int) -> Boolean): IntArray","description":"dev.mokkery.matcher.varargs.varargsIntAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-int-any.html","searchKeys":["varargsIntAny","inline fun ArgMatchersScope.varargsIntAny(noinline predicate: (Int) -> Boolean): IntArray","dev.mokkery.matcher.varargs.varargsIntAny"]},{"name":"inline fun ArgMatchersScope.varargsLongAll(noinline predicate: (Long) -> Boolean): LongArray","description":"dev.mokkery.matcher.varargs.varargsLongAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-long-all.html","searchKeys":["varargsLongAll","inline fun ArgMatchersScope.varargsLongAll(noinline predicate: (Long) -> Boolean): LongArray","dev.mokkery.matcher.varargs.varargsLongAll"]},{"name":"inline fun ArgMatchersScope.varargsLongAny(noinline predicate: (Long) -> Boolean): LongArray","description":"dev.mokkery.matcher.varargs.varargsLongAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-long-any.html","searchKeys":["varargsLongAny","inline fun ArgMatchersScope.varargsLongAny(noinline predicate: (Long) -> Boolean): LongArray","dev.mokkery.matcher.varargs.varargsLongAny"]},{"name":"inline fun ArgMatchersScope.varargsShortAll(noinline predicate: (Short) -> Boolean): ShortArray","description":"dev.mokkery.matcher.varargs.varargsShortAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-short-all.html","searchKeys":["varargsShortAll","inline fun ArgMatchersScope.varargsShortAll(noinline predicate: (Short) -> Boolean): ShortArray","dev.mokkery.matcher.varargs.varargsShortAll"]},{"name":"inline fun ArgMatchersScope.varargsShortAny(noinline predicate: (Short) -> Boolean): ShortArray","description":"dev.mokkery.matcher.varargs.varargsShortAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-short-any.html","searchKeys":["varargsShortAny","inline fun ArgMatchersScope.varargsShortAny(noinline predicate: (Short) -> Boolean): ShortArray","dev.mokkery.matcher.varargs.varargsShortAny"]},{"name":"inline fun ArgMatchersScope.varargsUByteAll(noinline predicate: (UByte) -> Boolean): UByteArray","description":"dev.mokkery.matcher.varargs.varargsUByteAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-byte-all.html","searchKeys":["varargsUByteAll","inline fun ArgMatchersScope.varargsUByteAll(noinline predicate: (UByte) -> Boolean): UByteArray","dev.mokkery.matcher.varargs.varargsUByteAll"]},{"name":"inline fun ArgMatchersScope.varargsUByteAny(noinline predicate: (UByte) -> Boolean): UByteArray","description":"dev.mokkery.matcher.varargs.varargsUByteAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-byte-any.html","searchKeys":["varargsUByteAny","inline fun ArgMatchersScope.varargsUByteAny(noinline predicate: (UByte) -> Boolean): UByteArray","dev.mokkery.matcher.varargs.varargsUByteAny"]},{"name":"inline fun ArgMatchersScope.varargsUIntAll(noinline predicate: (UInt) -> Boolean): IntArray","description":"dev.mokkery.matcher.varargs.varargsUIntAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-int-all.html","searchKeys":["varargsUIntAll","inline fun ArgMatchersScope.varargsUIntAll(noinline predicate: (UInt) -> Boolean): IntArray","dev.mokkery.matcher.varargs.varargsUIntAll"]},{"name":"inline fun ArgMatchersScope.varargsUIntAny(noinline predicate: (UInt) -> Boolean): IntArray","description":"dev.mokkery.matcher.varargs.varargsUIntAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-int-any.html","searchKeys":["varargsUIntAny","inline fun ArgMatchersScope.varargsUIntAny(noinline predicate: (UInt) -> Boolean): IntArray","dev.mokkery.matcher.varargs.varargsUIntAny"]},{"name":"inline fun ArgMatchersScope.varargsULongAll(noinline predicate: (ULong) -> Boolean): ULongArray","description":"dev.mokkery.matcher.varargs.varargsULongAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-long-all.html","searchKeys":["varargsULongAll","inline fun ArgMatchersScope.varargsULongAll(noinline predicate: (ULong) -> Boolean): ULongArray","dev.mokkery.matcher.varargs.varargsULongAll"]},{"name":"inline fun ArgMatchersScope.varargsULongAny(noinline predicate: (ULong) -> Boolean): ULongArray","description":"dev.mokkery.matcher.varargs.varargsULongAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-long-any.html","searchKeys":["varargsULongAny","inline fun ArgMatchersScope.varargsULongAny(noinline predicate: (ULong) -> Boolean): ULongArray","dev.mokkery.matcher.varargs.varargsULongAny"]},{"name":"inline fun ArgMatchersScope.varargsUShortAll(noinline predicate: (UShort) -> Boolean): UShortArray","description":"dev.mokkery.matcher.varargs.varargsUShortAll","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-short-all.html","searchKeys":["varargsUShortAll","inline fun ArgMatchersScope.varargsUShortAll(noinline predicate: (UShort) -> Boolean): UShortArray","dev.mokkery.matcher.varargs.varargsUShortAll"]},{"name":"inline fun ArgMatchersScope.varargsUShortAny(noinline predicate: (UShort) -> Boolean): UShortArray","description":"dev.mokkery.matcher.varargs.varargsUShortAny","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-short-any.html","searchKeys":["varargsUShortAny","inline fun ArgMatchersScope.varargsUShortAny(noinline predicate: (UShort) -> Boolean): UShortArray","dev.mokkery.matcher.varargs.varargsUShortAny"]},{"name":"inline operator fun <T> component1(): T","description":"dev.mokkery.answering.CallArgs.component1","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component1.html","searchKeys":["component1","inline operator fun <T> component1(): T","dev.mokkery.answering.CallArgs.component1"]},{"name":"inline operator fun <T> component2(): T","description":"dev.mokkery.answering.CallArgs.component2","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component2.html","searchKeys":["component2","inline operator fun <T> component2(): T","dev.mokkery.answering.CallArgs.component2"]},{"name":"inline operator fun <T> component3(): T","description":"dev.mokkery.answering.CallArgs.component3","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component3.html","searchKeys":["component3","inline operator fun <T> component3(): T","dev.mokkery.answering.CallArgs.component3"]},{"name":"inline operator fun <T> component4(): T","description":"dev.mokkery.answering.CallArgs.component4","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component4.html","searchKeys":["component4","inline operator fun <T> component4(): T","dev.mokkery.answering.CallArgs.component4"]},{"name":"inline operator fun <T> component5(): T","description":"dev.mokkery.answering.CallArgs.component5","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component5.html","searchKeys":["component5","inline operator fun <T> component5(): T","dev.mokkery.answering.CallArgs.component5"]},{"name":"inline operator fun <T> component6(): T","description":"dev.mokkery.answering.CallArgs.component6","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component6.html","searchKeys":["component6","inline operator fun <T> component6(): T","dev.mokkery.answering.CallArgs.component6"]},{"name":"inline operator fun <T> component7(): T","description":"dev.mokkery.answering.CallArgs.component7","location":"mokkery-runtime/dev.mokkery.answering/-call-args/component7.html","searchKeys":["component7","inline operator fun <T> component7(): T","dev.mokkery.answering.CallArgs.component7"]},{"name":"interface Answer<out T>","description":"dev.mokkery.answering.Answer","location":"mokkery-runtime/dev.mokkery.answering/-answer/index.html","searchKeys":["Answer","interface Answer<out T>","dev.mokkery.answering.Answer"]},{"name":"interface AnsweringScope<T>","description":"dev.mokkery.answering.AnsweringScope","location":"mokkery-runtime/dev.mokkery.answering/-answering-scope/index.html","searchKeys":["AnsweringScope","interface AnsweringScope<T>","dev.mokkery.answering.AnsweringScope"]},{"name":"interface ArgMatchersScope","description":"dev.mokkery.matcher.ArgMatchersScope","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matchers-scope/index.html","searchKeys":["ArgMatchersScope","interface ArgMatchersScope","dev.mokkery.matcher.ArgMatchersScope"]},{"name":"interface BlockingAnsweringScope<T> : AnsweringScope<T> ","description":"dev.mokkery.answering.BlockingAnsweringScope","location":"mokkery-runtime/dev.mokkery.answering/-blocking-answering-scope/index.html","searchKeys":["BlockingAnsweringScope","interface BlockingAnsweringScope<T> : AnsweringScope<T> ","dev.mokkery.answering.BlockingAnsweringScope"]},{"name":"interface BlockingCallDefinitionScope<out R> : CallDefinitionScope<R> ","description":"dev.mokkery.answering.BlockingCallDefinitionScope","location":"mokkery-runtime/dev.mokkery.answering/-blocking-call-definition-scope/index.html","searchKeys":["BlockingCallDefinitionScope","interface BlockingCallDefinitionScope<out R> : CallDefinitionScope<R> ","dev.mokkery.answering.BlockingCallDefinitionScope"]},{"name":"interface BlockingSequentialAnswerBuilder<T> : BlockingAnsweringScope<T> , SequentialAnswerBuilder<T> ","description":"dev.mokkery.answering.BlockingSequentialAnswerBuilder","location":"mokkery-runtime/dev.mokkery.answering/-blocking-sequential-answer-builder/index.html","searchKeys":["BlockingSequentialAnswerBuilder","interface BlockingSequentialAnswerBuilder<T> : BlockingAnsweringScope<T> , SequentialAnswerBuilder<T> ","dev.mokkery.answering.BlockingSequentialAnswerBuilder"]},{"name":"interface CallDefinitionScope<out R>","description":"dev.mokkery.answering.CallDefinitionScope","location":"mokkery-runtime/dev.mokkery.answering/-call-definition-scope/index.html","searchKeys":["CallDefinitionScope","interface CallDefinitionScope<out R>","dev.mokkery.answering.CallDefinitionScope"]},{"name":"interface Capture<in T>","description":"dev.mokkery.matcher.capture.Capture","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/index.html","searchKeys":["Capture","interface Capture<in T>","dev.mokkery.matcher.capture.Capture"]},{"name":"interface Composite<T> : ArgMatcher<T> , Capture<T> ","description":"dev.mokkery.matcher.ArgMatcher.Composite","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-composite/index.html","searchKeys":["Composite","interface Composite<T> : ArgMatcher<T> , Capture<T> ","dev.mokkery.matcher.ArgMatcher.Composite"]},{"name":"interface ContainerCapture<T> : Capture<T> ","description":"dev.mokkery.matcher.capture.ContainerCapture","location":"mokkery-runtime/dev.mokkery.matcher.capture/-container-capture/index.html","searchKeys":["ContainerCapture","interface ContainerCapture<T> : Capture<T> ","dev.mokkery.matcher.capture.ContainerCapture"]},{"name":"interface Sequential<T> : Answer<T> ","description":"dev.mokkery.answering.Answer.Sequential","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential/index.html","searchKeys":["Sequential","interface Sequential<T> : Answer<T> ","dev.mokkery.answering.Answer.Sequential"]},{"name":"interface SequentialAnswerBuilder<T> : AnsweringScope<T> ","description":"dev.mokkery.answering.SequentialAnswerBuilder","location":"mokkery-runtime/dev.mokkery.answering/-sequential-answer-builder/index.html","searchKeys":["SequentialAnswerBuilder","interface SequentialAnswerBuilder<T> : AnsweringScope<T> ","dev.mokkery.answering.SequentialAnswerBuilder"]},{"name":"interface SlotCapture<T> : ContainerCapture<T> ","description":"dev.mokkery.matcher.capture.SlotCapture","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/index.html","searchKeys":["SlotCapture","interface SlotCapture<T> : ContainerCapture<T> ","dev.mokkery.matcher.capture.SlotCapture"]},{"name":"interface SuspendAnsweringScope<T> : AnsweringScope<T> ","description":"dev.mokkery.answering.SuspendAnsweringScope","location":"mokkery-runtime/dev.mokkery.answering/-suspend-answering-scope/index.html","searchKeys":["SuspendAnsweringScope","interface SuspendAnsweringScope<T> : AnsweringScope<T> ","dev.mokkery.answering.SuspendAnsweringScope"]},{"name":"interface SuspendCallDefinitionScope<out R> : CallDefinitionScope<R> ","description":"dev.mokkery.answering.SuspendCallDefinitionScope","location":"mokkery-runtime/dev.mokkery.answering/-suspend-call-definition-scope/index.html","searchKeys":["SuspendCallDefinitionScope","interface SuspendCallDefinitionScope<out R> : CallDefinitionScope<R> ","dev.mokkery.answering.SuspendCallDefinitionScope"]},{"name":"interface SuspendSequentialAnswerBuilder<T> : SuspendAnsweringScope<T> , SequentialAnswerBuilder<T> ","description":"dev.mokkery.answering.SuspendSequentialAnswerBuilder","location":"mokkery-runtime/dev.mokkery.answering/-suspend-sequential-answer-builder/index.html","searchKeys":["SuspendSequentialAnswerBuilder","interface SuspendSequentialAnswerBuilder<T> : SuspendAnsweringScope<T> , SequentialAnswerBuilder<T> ","dev.mokkery.answering.SuspendSequentialAnswerBuilder"]},{"name":"interface Suspending<T> : Answer<T> ","description":"dev.mokkery.answering.Answer.Suspending","location":"mokkery-runtime/dev.mokkery.answering/-answer/-suspending/index.html","searchKeys":["Suspending","interface Suspending<T> : Answer<T> ","dev.mokkery.answering.Answer.Suspending"]},{"name":"object Absent : SlotCapture.Value<Nothing> ","description":"dev.mokkery.matcher.capture.SlotCapture.Value.Absent","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/-value/-absent/index.html","searchKeys":["Absent","object Absent : SlotCapture.Value<Nothing> ","dev.mokkery.matcher.capture.SlotCapture.Value.Absent"]},{"name":"object Any : ArgMatcher<Any?> ","description":"dev.mokkery.matcher.ArgMatcher.Any","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-any/index.html","searchKeys":["Any","object Any : ArgMatcher<Any?> ","dev.mokkery.matcher.ArgMatcher.Any"]},{"name":"object Autofill : Answer<Any?> ","description":"dev.mokkery.answering.Answer.Autofill","location":"mokkery-runtime/dev.mokkery.answering/-answer/-autofill/index.html","searchKeys":["Autofill","object Autofill : Answer<Any?> ","dev.mokkery.answering.Answer.Autofill"]},{"name":"object CollectionArgMatchers","description":"dev.mokkery.matcher.collections.CollectionArgMatchers","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/index.html","searchKeys":["CollectionArgMatchers","object CollectionArgMatchers","dev.mokkery.matcher.collections.CollectionArgMatchers"]},{"name":"object Companion","description":"dev.mokkery.answering.SuperCall.Companion","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-companion/index.html","searchKeys":["Companion","object Companion","dev.mokkery.answering.SuperCall.Companion"]},{"name":"object Companion","description":"dev.mokkery.matcher.capture.Capture.Companion","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture/-companion/index.html","searchKeys":["Companion","object Companion","dev.mokkery.matcher.capture.Capture.Companion"]},{"name":"object LogicalMatchers","description":"dev.mokkery.matcher.logical.LogicalMatchers","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/index.html","searchKeys":["LogicalMatchers","object LogicalMatchers","dev.mokkery.matcher.logical.LogicalMatchers"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.mokkery.answering.CallArgs.equals","location":"mokkery-runtime/dev.mokkery.answering/-call-args/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.mokkery.answering.CallArgs.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.mokkery.answering.FunctionScope.equals","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.mokkery.answering.FunctionScope.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.mokkery.matcher.capture.CaptureMatcher.equals","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.mokkery.matcher.capture.CaptureMatcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.equals","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.equals"]},{"name":"open override fun assertFilled()","description":"dev.mokkery.matcher.capture.CaptureMatcher.assertFilled","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/assert-filled.html","searchKeys":["assertFilled","open override fun assertFilled()","dev.mokkery.matcher.capture.CaptureMatcher.assertFilled"]},{"name":"open override fun assertFilled()","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.assertFilled","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/assert-filled.html","searchKeys":["assertFilled","open override fun assertFilled()","dev.mokkery.matcher.logical.LogicalMatchers.And.assertFilled"]},{"name":"open override fun assertFilled()","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.assertFilled","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/assert-filled.html","searchKeys":["assertFilled","open override fun assertFilled()","dev.mokkery.matcher.logical.LogicalMatchers.Not.assertFilled"]},{"name":"open override fun assertFilled()","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.assertFilled","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/assert-filled.html","searchKeys":["assertFilled","open override fun assertFilled()","dev.mokkery.matcher.logical.LogicalMatchers.Or.assertFilled"]},{"name":"open override fun assertFilled()","description":"dev.mokkery.matcher.nullable.NotNullMatcher.assertFilled","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/assert-filled.html","searchKeys":["assertFilled","open override fun assertFilled()","dev.mokkery.matcher.nullable.NotNullMatcher.assertFilled"]},{"name":"open override fun call(scope: FunctionScope): Any?","description":"dev.mokkery.answering.Answer.Autofill.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-autofill/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): Any?","dev.mokkery.answering.Answer.Autofill.call"]},{"name":"open override fun call(scope: FunctionScope): Nothing","description":"dev.mokkery.answering.Answer.Suspending.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-suspending/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): Nothing","dev.mokkery.answering.Answer.Suspending.call"]},{"name":"open override fun call(scope: FunctionScope): Nothing","description":"dev.mokkery.answering.Answer.Throws.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): Nothing","dev.mokkery.answering.Answer.Throws.call"]},{"name":"open override fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.Block.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.Block.call"]},{"name":"open override fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.Const.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.Const.call"]},{"name":"open override fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.SequentialByIterator.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential-by-iterator/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.SequentialByIterator.call"]},{"name":"open override fun capture(value: T)","description":"dev.mokkery.matcher.capture.CaptureMatcher.capture","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/capture.html","searchKeys":["capture","open override fun capture(value: T)","dev.mokkery.matcher.capture.CaptureMatcher.capture"]},{"name":"open override fun capture(value: T)","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.capture","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/capture.html","searchKeys":["capture","open override fun capture(value: T)","dev.mokkery.matcher.logical.LogicalMatchers.And.capture"]},{"name":"open override fun capture(value: T)","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.capture","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/capture.html","searchKeys":["capture","open override fun capture(value: T)","dev.mokkery.matcher.logical.LogicalMatchers.Not.capture"]},{"name":"open override fun capture(value: T)","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.capture","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/capture.html","searchKeys":["capture","open override fun capture(value: T)","dev.mokkery.matcher.logical.LogicalMatchers.Or.capture"]},{"name":"open override fun capture(value: T)","description":"dev.mokkery.matcher.nullable.NotNullMatcher.capture","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/capture.html","searchKeys":["capture","open override fun capture(value: T)","dev.mokkery.matcher.nullable.NotNullMatcher.capture"]},{"name":"open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","description":"dev.mokkery.matcher.capture.CaptureMatcher.compose","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/compose.html","searchKeys":["compose","open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","dev.mokkery.matcher.capture.CaptureMatcher.compose"]},{"name":"open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.compose","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/compose.html","searchKeys":["compose","open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","dev.mokkery.matcher.logical.LogicalMatchers.And.compose"]},{"name":"open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.compose","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/compose.html","searchKeys":["compose","open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","dev.mokkery.matcher.logical.LogicalMatchers.Not.compose"]},{"name":"open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.compose","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/compose.html","searchKeys":["compose","open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","dev.mokkery.matcher.logical.LogicalMatchers.Or.compose"]},{"name":"open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","description":"dev.mokkery.matcher.nullable.NotNullMatcher.compose","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/compose.html","searchKeys":["compose","open override fun compose(matcher: ArgMatcher<T>): ArgMatcher.Composite<T>","dev.mokkery.matcher.nullable.NotNullMatcher.compose"]},{"name":"open override fun hasNext(): Boolean","description":"dev.mokkery.answering.Answer.SequentialByIterator.hasNext","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential-by-iterator/has-next.html","searchKeys":["hasNext","open override fun hasNext(): Boolean","dev.mokkery.answering.Answer.SequentialByIterator.hasNext"]},{"name":"open override fun hashCode(): Int","description":"dev.mokkery.answering.CallArgs.hashCode","location":"mokkery-runtime/dev.mokkery.answering/-call-args/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.mokkery.answering.CallArgs.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.mokkery.answering.FunctionScope.hashCode","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.mokkery.answering.FunctionScope.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.mokkery.matcher.capture.CaptureMatcher.hashCode","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.mokkery.matcher.capture.CaptureMatcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.hashCode","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.hashCode"]},{"name":"open override fun isFilled(): Boolean","description":"dev.mokkery.matcher.capture.CaptureMatcher.isFilled","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/is-filled.html","searchKeys":["isFilled","open override fun isFilled(): Boolean","dev.mokkery.matcher.capture.CaptureMatcher.isFilled"]},{"name":"open override fun isFilled(): Boolean","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.isFilled","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/is-filled.html","searchKeys":["isFilled","open override fun isFilled(): Boolean","dev.mokkery.matcher.logical.LogicalMatchers.And.isFilled"]},{"name":"open override fun isFilled(): Boolean","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.isFilled","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/is-filled.html","searchKeys":["isFilled","open override fun isFilled(): Boolean","dev.mokkery.matcher.logical.LogicalMatchers.Not.isFilled"]},{"name":"open override fun isFilled(): Boolean","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.isFilled","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/is-filled.html","searchKeys":["isFilled","open override fun isFilled(): Boolean","dev.mokkery.matcher.logical.LogicalMatchers.Or.isFilled"]},{"name":"open override fun isFilled(): Boolean","description":"dev.mokkery.matcher.nullable.NotNullMatcher.isFilled","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/is-filled.html","searchKeys":["isFilled","open override fun isFilled(): Boolean","dev.mokkery.matcher.nullable.NotNullMatcher.isFilled"]},{"name":"open override fun matches(arg: Any): Boolean","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals.matches","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-equals/matches.html","searchKeys":["matches","open override fun matches(arg: Any): Boolean","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals.matches"]},{"name":"open override fun matches(arg: Any?): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Any.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-any/matches.html","searchKeys":["matches","open override fun matches(arg: Any?): Boolean","dev.mokkery.matcher.ArgMatcher.Any.matches"]},{"name":"open override fun matches(arg: Array<T>): Boolean","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.matches","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/matches.html","searchKeys":["matches","open override fun matches(arg: Array<T>): Boolean","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Comparing.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.Comparing.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Equals.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.Equals.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.EqualsRef.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Matching.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.Matching.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.NotEqual.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.NotEqualRef.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.OfType.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-of-type/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.OfType.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.capture.CaptureMatcher.matches","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.capture.CaptureMatcher.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.matches","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-in-iterable/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.matches","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-not-in-iterable/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.matches","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.logical.LogicalMatchers.And.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.matches","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.logical.LogicalMatchers.Not.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.matches","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.logical.LogicalMatchers.Or.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.nullable.NotNullMatcher.matches","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.nullable.NotNullMatcher.matches"]},{"name":"open override fun matchesVarargs(varargs: List<Any?>): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.matchesVarargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/matches-varargs.html","searchKeys":["matchesVarargs","open override fun matchesVarargs(varargs: List<Any?>): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.matchesVarargs"]},{"name":"open override fun matchesVarargs(varargs: List<T>): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.matchesVarargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/matches-varargs.html","searchKeys":["matchesVarargs","open override fun matchesVarargs(varargs: List<T>): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.matchesVarargs"]},{"name":"open override fun matchesVarargs(varargs: List<T>): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat.matchesVarargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-that/matches-varargs.html","searchKeys":["matchesVarargs","open override fun matchesVarargs(varargs: List<T>): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat.matchesVarargs"]},{"name":"open override fun toString(): String","description":"dev.mokkery.answering.CallArgs.toString","location":"mokkery-runtime/dev.mokkery.answering/-call-args/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.answering.CallArgs.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.answering.FunctionScope.toString","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.answering.FunctionScope.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Any.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-any/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Any.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Comparing.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Comparing.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Equals.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Equals.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.EqualsRef.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Matching.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Matching.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.NotEqual.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.NotEqualRef.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.OfType.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-of-type/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.OfType.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.capture.CaptureMatcher.toString","location":"mokkery-runtime/dev.mokkery.matcher.capture/-capture-matcher/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.capture.CaptureMatcher.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.toString","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals.toString","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-equals/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentEquals.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.toString","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-in-iterable/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.toString","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-not-in-iterable/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.toString","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.logical.LogicalMatchers.And.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.toString","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.logical.LogicalMatchers.Not.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.toString","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.logical.LogicalMatchers.Or.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.nullable.NotNullMatcher.toString","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.nullable.NotNullMatcher.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.toString","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.toString","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat.toString","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-that/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.varargs.VarArgMatcher.AnyThat.toString"]},{"name":"open suspend fun callSuspend(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.callSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/call-suspend.html","searchKeys":["callSuspend","open suspend fun callSuspend(scope: FunctionScope): T","dev.mokkery.answering.Answer.callSuspend"]},{"name":"open suspend override fun callSuspend(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.BlockSuspend.callSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/call-suspend.html","searchKeys":["callSuspend","open suspend override fun callSuspend(scope: FunctionScope): T","dev.mokkery.answering.Answer.BlockSuspend.callSuspend"]},{"name":"open suspend override fun callSuspend(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.SequentialByIterator.callSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential-by-iterator/call-suspend.html","searchKeys":["callSuspend","open suspend override fun callSuspend(scope: FunctionScope): T","dev.mokkery.answering.Answer.SequentialByIterator.callSuspend"]},{"name":"operator fun <T> SlotCapture<T>.getValue(thisRef: Any?, property: KProperty<*>): T?","description":"dev.mokkery.matcher.capture.getValue","location":"mokkery-runtime/dev.mokkery.matcher.capture/get-value.html","searchKeys":["getValue","operator fun <T> SlotCapture<T>.getValue(thisRef: Any?, property: KProperty<*>): T?","dev.mokkery.matcher.capture.getValue"]},{"name":"override fun matches(arg: Any?): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.Base.matches","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-base/matches.html","searchKeys":["matches","override fun matches(arg: Any?): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.Base.matches"]},{"name":"sealed interface SuperCall","description":"dev.mokkery.answering.SuperCall","location":"mokkery-runtime/dev.mokkery.answering/-super-call/index.html","searchKeys":["SuperCall","sealed interface SuperCall","dev.mokkery.answering.SuperCall"]},{"name":"sealed interface Value<out T>","description":"dev.mokkery.matcher.capture.SlotCapture.Value","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/-value/index.html","searchKeys":["Value","sealed interface Value<out T>","dev.mokkery.matcher.capture.SlotCapture.Value"]},{"name":"sealed interface VarArgMatcher : ArgMatcher<Any?> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/index.html","searchKeys":["VarArgMatcher","sealed interface VarArgMatcher : ArgMatcher<Any?> ","dev.mokkery.matcher.varargs.VarArgMatcher"]},{"name":"suspend fun callSuspendOriginal(args: List<Any?>): Any?","description":"dev.mokkery.answering.FunctionScope.callSuspendOriginal","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/call-suspend-original.html","searchKeys":["callSuspendOriginal","suspend fun callSuspendOriginal(args: List<Any?>): Any?","dev.mokkery.answering.FunctionScope.callSuspendOriginal"]},{"name":"suspend fun callSuspendSuper(superType: KClass<*>, args: List<Any?>): Any?","description":"dev.mokkery.answering.FunctionScope.callSuspendSuper","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/call-suspend-super.html","searchKeys":["callSuspendSuper","suspend fun callSuspendSuper(superType: KClass<*>, args: List<Any?>): Any?","dev.mokkery.answering.FunctionScope.callSuspendSuper"]},{"name":"val <T> SlotCapture<T>.isAbsent: Boolean","description":"dev.mokkery.matcher.capture.isAbsent","location":"mokkery-runtime/dev.mokkery.matcher.capture/is-absent.html","searchKeys":["isAbsent","val <T> SlotCapture<T>.isAbsent: Boolean","dev.mokkery.matcher.capture.isAbsent"]},{"name":"val <T> SlotCapture<T>.isPresent: Boolean","description":"dev.mokkery.matcher.capture.isPresent","location":"mokkery-runtime/dev.mokkery.matcher.capture/is-present.html","searchKeys":["isPresent","val <T> SlotCapture<T>.isPresent: Boolean","dev.mokkery.matcher.capture.isPresent"]},{"name":"val args: List<Any?>","description":"dev.mokkery.answering.CallArgs.args","location":"mokkery-runtime/dev.mokkery.answering/-call-args/args.html","searchKeys":["args","val args: List<Any?>","dev.mokkery.answering.CallArgs.args"]},{"name":"val args: List<Any?>","description":"dev.mokkery.answering.FunctionScope.args","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/args.html","searchKeys":["args","val args: List<Any?>","dev.mokkery.answering.FunctionScope.args"]},{"name":"val args: List<Any?>? = null","description":"dev.mokkery.answering.SuperCall.OfType.args","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-of-type/args.html","searchKeys":["args","val args: List<Any?>? = null","dev.mokkery.answering.SuperCall.OfType.args"]},{"name":"val args: List<Any?>? = null","description":"dev.mokkery.answering.SuperCall.Original.args","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-original/args.html","searchKeys":["args","val args: List<Any?>? = null","dev.mokkery.answering.SuperCall.Original.args"]},{"name":"val array: Array<T>","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.array","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-content-deep-equals/array.html","searchKeys":["array","val array: Array<T>","dev.mokkery.matcher.collections.CollectionArgMatchers.ContentDeepEquals.array"]},{"name":"val block: BlockingCallDefinitionScope<T>.(CallArgs) -> T","description":"dev.mokkery.answering.Answer.Block.block","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/block.html","searchKeys":["block","val block: BlockingCallDefinitionScope<T>.(CallArgs) -> T","dev.mokkery.answering.Answer.Block.block"]},{"name":"val block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T","description":"dev.mokkery.answering.Answer.BlockSuspend.block","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/block.html","searchKeys":["block","val block: suspend SuspendCallDefinitionScope<T>.(CallArgs) -> T","dev.mokkery.answering.Answer.BlockSuspend.block"]},{"name":"val compare: (Int) -> Boolean","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.compare","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/compare.html","searchKeys":["compare","val compare: (Int) -> Boolean","dev.mokkery.matcher.ArgMatcher.Comparing.Type.compare"]},{"name":"val entries: EnumEntries<ArgMatcher.Comparing.Type>","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.entries","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ArgMatcher.Comparing.Type>","dev.mokkery.matcher.ArgMatcher.Comparing.Type.entries"]},{"name":"val expectedMatchers: Int","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.expectedMatchers","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/expected-matchers.html","searchKeys":["expectedMatchers","val expectedMatchers: Int","dev.mokkery.matcher.logical.LogicalMatchers.And.expectedMatchers"]},{"name":"val expectedMatchers: Int","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.expectedMatchers","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/expected-matchers.html","searchKeys":["expectedMatchers","val expectedMatchers: Int","dev.mokkery.matcher.logical.LogicalMatchers.Or.expectedMatchers"]},{"name":"val iterable: Iterable<T>","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.iterable","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-in-iterable/iterable.html","searchKeys":["iterable","val iterable: Iterable<T>","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueInIterable.iterable"]},{"name":"val iterable: Iterable<T>","description":"dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.iterable","location":"mokkery-runtime/dev.mokkery.matcher.collections/-collection-arg-matchers/-value-not-in-iterable/iterable.html","searchKeys":["iterable","val iterable: Iterable<T>","dev.mokkery.matcher.collections.CollectionArgMatchers.ValueNotInIterable.iterable"]},{"name":"val iterator: Iterator<Answer<T>>","description":"dev.mokkery.answering.Answer.SequentialByIterator.iterator","location":"mokkery-runtime/dev.mokkery.answering/-answer/-sequential-by-iterator/iterator.html","searchKeys":["iterator","val iterator: Iterator<Answer<T>>","dev.mokkery.answering.Answer.SequentialByIterator.iterator"]},{"name":"val matcher: ArgMatcher<T & Any>? = null","description":"dev.mokkery.matcher.nullable.NotNullMatcher.matcher","location":"mokkery-runtime/dev.mokkery.matcher.nullable/-not-null-matcher/matcher.html","searchKeys":["matcher","val matcher: ArgMatcher<T & Any>? = null","dev.mokkery.matcher.nullable.NotNullMatcher.matcher"]},{"name":"val matcher: ArgMatcher<T>? = null","description":"dev.mokkery.matcher.logical.LogicalMatchers.Not.matcher","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-not/matcher.html","searchKeys":["matcher","val matcher: ArgMatcher<T>? = null","dev.mokkery.matcher.logical.LogicalMatchers.Not.matcher"]},{"name":"val matchers: List<ArgMatcher<T>>","description":"dev.mokkery.matcher.logical.LogicalMatchers.And.matchers","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-and/matchers.html","searchKeys":["matchers","val matchers: List<ArgMatcher<T>>","dev.mokkery.matcher.logical.LogicalMatchers.And.matchers"]},{"name":"val matchers: List<ArgMatcher<T>>","description":"dev.mokkery.matcher.logical.LogicalMatchers.Or.matchers","location":"mokkery-runtime/dev.mokkery.matcher.logical/-logical-matchers/-or/matchers.html","searchKeys":["matchers","val matchers: List<ArgMatcher<T>>","dev.mokkery.matcher.logical.LogicalMatchers.Or.matchers"]},{"name":"val original: SuperCall","description":"dev.mokkery.answering.SuperCall.Companion.original","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-companion/original.html","searchKeys":["original","val original: SuperCall","dev.mokkery.answering.SuperCall.Companion.original"]},{"name":"val predicate: (T) -> Boolean","description":"dev.mokkery.matcher.ArgMatcher.Matching.predicate","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/predicate.html","searchKeys":["predicate","val predicate: (T) -> Boolean","dev.mokkery.matcher.ArgMatcher.Matching.predicate"]},{"name":"val returnType: KClass<*>","description":"dev.mokkery.answering.FunctionScope.returnType","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/return-type.html","searchKeys":["returnType","val returnType: KClass<*>","dev.mokkery.answering.FunctionScope.returnType"]},{"name":"val self: Any?","description":"dev.mokkery.answering.FunctionScope.self","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/self.html","searchKeys":["self","val self: Any?","dev.mokkery.answering.FunctionScope.self"]},{"name":"val supers: Map<KClass<*>, (args: List<Any?>) -> Any?>","description":"dev.mokkery.answering.FunctionScope.supers","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/supers.html","searchKeys":["supers","val supers: Map<KClass<*>, (args: List<Any?>) -> Any?>","dev.mokkery.answering.FunctionScope.supers"]},{"name":"val throwable: Throwable","description":"dev.mokkery.answering.Answer.Throws.throwable","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/throwable.html","searchKeys":["throwable","val throwable: Throwable","dev.mokkery.answering.Answer.Throws.throwable"]},{"name":"val toStringFun: () -> String","description":"dev.mokkery.matcher.ArgMatcher.Matching.toStringFun","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/to-string-fun.html","searchKeys":["toStringFun","val toStringFun: () -> String","dev.mokkery.matcher.ArgMatcher.Matching.toStringFun"]},{"name":"val type: ArgMatcher.Comparing.Type","description":"dev.mokkery.matcher.ArgMatcher.Comparing.type","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/type.html","searchKeys":["type","val type: ArgMatcher.Comparing.Type","dev.mokkery.matcher.ArgMatcher.Comparing.type"]},{"name":"val type: KClass<*>","description":"dev.mokkery.answering.SuperCall.OfType.type","location":"mokkery-runtime/dev.mokkery.answering/-super-call/-of-type/type.html","searchKeys":["type","val type: KClass<*>","dev.mokkery.answering.SuperCall.OfType.type"]},{"name":"val type: KClass<*>","description":"dev.mokkery.matcher.ArgMatcher.OfType.type","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-of-type/type.html","searchKeys":["type","val type: KClass<*>","dev.mokkery.matcher.ArgMatcher.OfType.type"]},{"name":"val value: T","description":"dev.mokkery.answering.Answer.Const.value","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/value.html","searchKeys":["value","val value: T","dev.mokkery.answering.Answer.Const.value"]},{"name":"val value: T","description":"dev.mokkery.matcher.ArgMatcher.Comparing.value","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/value.html","searchKeys":["value","val value: T","dev.mokkery.matcher.ArgMatcher.Comparing.value"]},{"name":"val value: T","description":"dev.mokkery.matcher.ArgMatcher.Equals.value","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/value.html","searchKeys":["value","val value: T","dev.mokkery.matcher.ArgMatcher.Equals.value"]},{"name":"val value: T","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.value","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/value.html","searchKeys":["value","val value: T","dev.mokkery.matcher.ArgMatcher.EqualsRef.value"]},{"name":"val value: T","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.value","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/value.html","searchKeys":["value","val value: T","dev.mokkery.matcher.ArgMatcher.NotEqual.value"]},{"name":"val value: T","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.value","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/value.html","searchKeys":["value","val value: T","dev.mokkery.matcher.ArgMatcher.NotEqualRef.value"]},{"name":"val value: T","description":"dev.mokkery.matcher.capture.SlotCapture.Value.Present.value","location":"mokkery-runtime/dev.mokkery.matcher.capture/-slot-capture/-value/-present/value.html","searchKeys":["value","val value: T","dev.mokkery.matcher.capture.SlotCapture.Value.Present.value"]}]