[{"name":"abstract class MokkeryBaseTransformer(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile) : IrElementTransformerVoid","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/index.html","searchKeys":["MokkeryBaseTransformer","abstract class MokkeryBaseTransformer(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile) : IrElementTransformerVoid","dev.mokkery.plugin.transformers.MokkeryBaseTransformer"]},{"name":"class CallTrackingNestedTransformer(pluginContext: IrPluginContext, irFile: IrFile, table: Map<IrClass, IrClass>, scopeVar: IrVariable) : IrElementTransformerVoid","description":"dev.mokkery.plugin.transformers.CallTrackingNestedTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-nested-transformer/index.html","searchKeys":["CallTrackingNestedTransformer","class CallTrackingNestedTransformer(pluginContext: IrPluginContext, irFile: IrFile, table: Map<IrClass, IrClass>, scopeVar: IrVariable) : IrElementTransformerVoid","dev.mokkery.plugin.transformers.CallTrackingNestedTransformer"]},{"name":"class CallTrackingTransformer(irFile: IrFile, pluginContext: IrPluginContext, table: Map<IrClass, IrClass>, verifyMode: VerifyMode) : IrElementTransformerVoid","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/index.html","searchKeys":["CallTrackingTransformer","class CallTrackingTransformer(irFile: IrFile, pluginContext: IrPluginContext, table: Map<IrClass, IrClass>, verifyMode: VerifyMode) : IrElementTransformerVoid","dev.mokkery.plugin.transformers.CallTrackingTransformer"]},{"name":"class MockCallsTransformer(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, mockTable: MutableMap<IrClass, IrClass>, mockMode: MockMode) : MokkeryBaseTransformer","description":"dev.mokkery.plugin.transformers.MockCallsTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mock-calls-transformer/index.html","searchKeys":["MockCallsTransformer","class MockCallsTransformer(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, mockTable: MutableMap<IrClass, IrClass>, mockMode: MockMode) : MokkeryBaseTransformer","dev.mokkery.plugin.transformers.MockCallsTransformer"]},{"name":"class MokkeryCommandLineProcessor : CommandLineProcessor","description":"dev.mokkery.plugin.MokkeryCommandLineProcessor","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-command-line-processor/index.html","searchKeys":["MokkeryCommandLineProcessor","class MokkeryCommandLineProcessor : CommandLineProcessor","dev.mokkery.plugin.MokkeryCommandLineProcessor"]},{"name":"class MokkeryCompilerPluginRegistrar : CompilerPluginRegistrar","description":"dev.mokkery.plugin.MokkeryCompilerPluginRegistrar","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-compiler-plugin-registrar/index.html","searchKeys":["MokkeryCompilerPluginRegistrar","class MokkeryCompilerPluginRegistrar : CompilerPluginRegistrar","dev.mokkery.plugin.MokkeryCompilerPluginRegistrar"]},{"name":"class MokkeryIrGenerationExtension(messageCollector: MessageCollector, mockMode: MockMode, verifyMode: VerifyMode) : IrGenerationExtension","description":"dev.mokkery.plugin.MokkeryIrGenerationExtension","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-ir-generation-extension/index.html","searchKeys":["MokkeryIrGenerationExtension","class MokkeryIrGenerationExtension(messageCollector: MessageCollector, mockMode: MockMode, verifyMode: VerifyMode) : IrGenerationExtension","dev.mokkery.plugin.MokkeryIrGenerationExtension"]},{"name":"class SpyCallsTransformer(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, spyTable: MutableMap<IrClass, IrClass>) : MokkeryBaseTransformer","description":"dev.mokkery.plugin.transformers.SpyCallsTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-spy-calls-transformer/index.html","searchKeys":["SpyCallsTransformer","class SpyCallsTransformer(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, spyTable: MutableMap<IrClass, IrClass>) : MokkeryBaseTransformer","dev.mokkery.plugin.transformers.SpyCallsTransformer"]},{"name":"constructor()","description":"dev.mokkery.plugin.MokkeryCommandLineProcessor.MokkeryCommandLineProcessor","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-command-line-processor/-mokkery-command-line-processor.html","searchKeys":["MokkeryCommandLineProcessor","constructor()","dev.mokkery.plugin.MokkeryCommandLineProcessor.MokkeryCommandLineProcessor"]},{"name":"constructor()","description":"dev.mokkery.plugin.MokkeryCompilerPluginRegistrar.MokkeryCompilerPluginRegistrar","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-compiler-plugin-registrar/-mokkery-compiler-plugin-registrar.html","searchKeys":["MokkeryCompilerPluginRegistrar","constructor()","dev.mokkery.plugin.MokkeryCompilerPluginRegistrar.MokkeryCompilerPluginRegistrar"]},{"name":"constructor()","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.IrFunctions","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/-ir-functions.html","searchKeys":["IrFunctions","constructor()","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.IrFunctions"]},{"name":"constructor()","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.IrClasses","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-ir-classes.html","searchKeys":["IrClasses","constructor()","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.IrClasses"]},{"name":"constructor()","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions.IrFunctions","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-functions/-ir-functions.html","searchKeys":["IrFunctions","constructor()","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions.IrFunctions"]},{"name":"constructor(irFile: IrFile, pluginContext: IrPluginContext, table: Map<IrClass, IrClass>, verifyMode: VerifyMode)","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.CallTrackingTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-call-tracking-transformer.html","searchKeys":["CallTrackingTransformer","constructor(irFile: IrFile, pluginContext: IrPluginContext, table: Map<IrClass, IrClass>, verifyMode: VerifyMode)","dev.mokkery.plugin.transformers.CallTrackingTransformer.CallTrackingTransformer"]},{"name":"constructor(messageCollector: MessageCollector, mockMode: MockMode, verifyMode: VerifyMode)","description":"dev.mokkery.plugin.MokkeryIrGenerationExtension.MokkeryIrGenerationExtension","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-ir-generation-extension/-mokkery-ir-generation-extension.html","searchKeys":["MokkeryIrGenerationExtension","constructor(messageCollector: MessageCollector, mockMode: MockMode, verifyMode: VerifyMode)","dev.mokkery.plugin.MokkeryIrGenerationExtension.MokkeryIrGenerationExtension"]},{"name":"constructor(pluginContext: IrPluginContext, irFile: IrFile, table: Map<IrClass, IrClass>, scopeVar: IrVariable)","description":"dev.mokkery.plugin.transformers.CallTrackingNestedTransformer.CallTrackingNestedTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-nested-transformer/-call-tracking-nested-transformer.html","searchKeys":["CallTrackingNestedTransformer","constructor(pluginContext: IrPluginContext, irFile: IrFile, table: Map<IrClass, IrClass>, scopeVar: IrVariable)","dev.mokkery.plugin.transformers.CallTrackingNestedTransformer.CallTrackingNestedTransformer"]},{"name":"constructor(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile)","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.MokkeryBaseTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-mokkery-base-transformer.html","searchKeys":["MokkeryBaseTransformer","constructor(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile)","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.MokkeryBaseTransformer"]},{"name":"constructor(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, mockTable: MutableMap<IrClass, IrClass>, mockMode: MockMode)","description":"dev.mokkery.plugin.transformers.MockCallsTransformer.MockCallsTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mock-calls-transformer/-mock-calls-transformer.html","searchKeys":["MockCallsTransformer","constructor(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, mockTable: MutableMap<IrClass, IrClass>, mockMode: MockMode)","dev.mokkery.plugin.transformers.MockCallsTransformer.MockCallsTransformer"]},{"name":"constructor(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, spyTable: MutableMap<IrClass, IrClass>)","description":"dev.mokkery.plugin.transformers.SpyCallsTransformer.SpyCallsTransformer","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-spy-calls-transformer/-spy-calls-transformer.html","searchKeys":["SpyCallsTransformer","constructor(pluginContext: IrPluginContext, messageCollector: MessageCollector, irFile: IrFile, spyTable: MutableMap<IrClass, IrClass>)","dev.mokkery.plugin.transformers.SpyCallsTransformer.SpyCallsTransformer"]},{"name":"fun IrBuilderWithScope.irCallConstructor(constructor: IrConstructor): IrConstructorCall","description":"dev.mokkery.plugin.ext.irCallConstructor","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-call-constructor.html","searchKeys":["irCallConstructor","fun IrBuilderWithScope.irCallConstructor(constructor: IrConstructor): IrConstructorCall","dev.mokkery.plugin.ext.irCallConstructor"]},{"name":"fun IrBuilderWithScope.irCallHashCode(irClass: IrClass): IrCall","description":"dev.mokkery.plugin.ext.irCallHashCode","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-call-hash-code.html","searchKeys":["irCallHashCode","fun IrBuilderWithScope.irCallHashCode(irClass: IrClass): IrCall","dev.mokkery.plugin.ext.irCallHashCode"]},{"name":"fun IrBuilderWithScope.irDelegatingDefaultConstructorOrAny(irClass: IrClass): IrDelegatingConstructorCall","description":"dev.mokkery.plugin.ext.irDelegatingDefaultConstructorOrAny","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-delegating-default-constructor-or-any.html","searchKeys":["irDelegatingDefaultConstructorOrAny","fun IrBuilderWithScope.irDelegatingDefaultConstructorOrAny(irClass: IrClass): IrDelegatingConstructorCall","dev.mokkery.plugin.ext.irDelegatingDefaultConstructorOrAny"]},{"name":"fun IrBuilderWithScope.irGetEnumEntry(irClass: IrClass, name: String): IrGetEnumValue","description":"dev.mokkery.plugin.ext.irGetEnumEntry","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-get-enum-entry.html","searchKeys":["irGetEnumEntry","fun IrBuilderWithScope.irGetEnumEntry(irClass: IrClass, name: String): IrGetEnumValue","dev.mokkery.plugin.ext.irGetEnumEntry"]},{"name":"fun IrBuilderWithScope.irIfNotNull(arg: IrExpression, then: IrExpression): IrIfThenElseImpl","description":"dev.mokkery.plugin.ext.irIfNotNull","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-if-not-null.html","searchKeys":["irIfNotNull","fun IrBuilderWithScope.irIfNotNull(arg: IrExpression, then: IrExpression): IrIfThenElseImpl","dev.mokkery.plugin.ext.irIfNotNull"]},{"name":"fun IrBuilderWithScope.irInvokeIfNotNull(function: IrExpression, vararg args: IrExpression): IrIfThenElseImpl","description":"dev.mokkery.plugin.ext.irInvokeIfNotNull","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-invoke-if-not-null.html","searchKeys":["irInvokeIfNotNull","fun IrBuilderWithScope.irInvokeIfNotNull(function: IrExpression, vararg args: IrExpression): IrIfThenElseImpl","dev.mokkery.plugin.ext.irInvokeIfNotNull"]},{"name":"fun IrBuilderWithScope.irToString(pluginContext: IrPluginContext, expression: IrExpression, radix: Int): IrCall","description":"dev.mokkery.plugin.ext.irToString","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-to-string.html","searchKeys":["irToString","fun IrBuilderWithScope.irToString(pluginContext: IrPluginContext, expression: IrExpression, radix: Int): IrCall","dev.mokkery.plugin.ext.irToString"]},{"name":"fun IrBuilderWithScope.irTryCatchAny(expression: IrExpression): IrTry","description":"dev.mokkery.plugin.ext.irTryCatchAny","location":"mokkery-plugin/dev.mokkery.plugin.ext/ir-try-catch-any.html","searchKeys":["irTryCatchAny","fun IrBuilderWithScope.irTryCatchAny(expression: IrExpression): IrTry","dev.mokkery.plugin.ext.irTryCatchAny"]},{"name":"fun IrBuilderWithScope.kClassReferenceUnified(context: IrPluginContext, classType: IrType): IrClassReference","description":"dev.mokkery.plugin.ext.kClassReferenceUnified","location":"mokkery-plugin/dev.mokkery.plugin.ext/k-class-reference-unified.html","searchKeys":["kClassReferenceUnified","fun IrBuilderWithScope.kClassReferenceUnified(context: IrPluginContext, classType: IrType): IrClassReference","dev.mokkery.plugin.ext.kClassReferenceUnified"]},{"name":"fun IrClass.addOverridingMethod(context: IrGeneratorContext, function: IrSimpleFunction, block: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","description":"dev.mokkery.plugin.ext.addOverridingMethod","location":"mokkery-plugin/dev.mokkery.plugin.ext/add-overriding-method.html","searchKeys":["addOverridingMethod","fun IrClass.addOverridingMethod(context: IrGeneratorContext, function: IrSimpleFunction, block: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","dev.mokkery.plugin.ext.addOverridingMethod"]},{"name":"fun IrClass.addOverridingProperty(context: IrGeneratorContext, property: IrProperty, getterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit, setterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","description":"dev.mokkery.plugin.ext.addOverridingProperty","location":"mokkery-plugin/dev.mokkery.plugin.ext/add-overriding-property.html","searchKeys":["addOverridingProperty","fun IrClass.addOverridingProperty(context: IrGeneratorContext, property: IrProperty, getterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit, setterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","dev.mokkery.plugin.ext.addOverridingProperty"]},{"name":"fun IrClass.buildThisValueParam(): IrValueParameter","description":"dev.mokkery.plugin.ext.buildThisValueParam","location":"mokkery-plugin/dev.mokkery.plugin.ext/build-this-value-param.html","searchKeys":["buildThisValueParam","fun IrClass.buildThisValueParam(): IrValueParameter","dev.mokkery.plugin.ext.buildThisValueParam"]},{"name":"fun IrClass.createUniqueMockName(type: String): Name","description":"dev.mokkery.plugin.ext.createUniqueMockName","location":"mokkery-plugin/dev.mokkery.plugin.ext/create-unique-mock-name.html","searchKeys":["createUniqueMockName","fun IrClass.createUniqueMockName(type: String): Name","dev.mokkery.plugin.ext.createUniqueMockName"]},{"name":"fun IrClass.getEnumEntry(name: String): IrEnumEntry","description":"dev.mokkery.plugin.ext.getEnumEntry","location":"mokkery-plugin/dev.mokkery.plugin.ext/get-enum-entry.html","searchKeys":["getEnumEntry","fun IrClass.getEnumEntry(name: String): IrEnumEntry","dev.mokkery.plugin.ext.getEnumEntry"]},{"name":"fun IrClass.getProperty(name: String): IrProperty","description":"dev.mokkery.plugin.ext.getProperty","location":"mokkery-plugin/dev.mokkery.plugin.ext/get-property.html","searchKeys":["getProperty","fun IrClass.getProperty(name: String): IrProperty","dev.mokkery.plugin.ext.getProperty"]},{"name":"fun IrClass.overrideAllOverridableFunctions(context: IrGeneratorContext, superClass: IrClass, override: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","description":"dev.mokkery.plugin.ext.overrideAllOverridableFunctions","location":"mokkery-plugin/dev.mokkery.plugin.ext/override-all-overridable-functions.html","searchKeys":["overrideAllOverridableFunctions","fun IrClass.overrideAllOverridableFunctions(context: IrGeneratorContext, superClass: IrClass, override: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","dev.mokkery.plugin.ext.overrideAllOverridableFunctions"]},{"name":"fun IrClass.overrideAllOverridableProperties(context: IrGeneratorContext, superClass: IrClass, getterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit, setterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","description":"dev.mokkery.plugin.ext.overrideAllOverridableProperties","location":"mokkery-plugin/dev.mokkery.plugin.ext/override-all-overridable-properties.html","searchKeys":["overrideAllOverridableProperties","fun IrClass.overrideAllOverridableProperties(context: IrGeneratorContext, superClass: IrClass, getterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit, setterBlock: IrBlockBodyBuilder.(IrSimpleFunction) -> Unit)","dev.mokkery.plugin.ext.overrideAllOverridableProperties"]},{"name":"fun IrClass.overridePropertyBackingField(context: IrGeneratorContext, property: IrProperty): IrProperty","description":"dev.mokkery.plugin.ext.overridePropertyBackingField","location":"mokkery-plugin/dev.mokkery.plugin.ext/override-property-backing-field.html","searchKeys":["overridePropertyBackingField","fun IrClass.overridePropertyBackingField(context: IrGeneratorContext, property: IrProperty): IrProperty","dev.mokkery.plugin.ext.overridePropertyBackingField"]},{"name":"fun IrExpression.locationInFile(file: IrFile): String","description":"dev.mokkery.plugin.ext.locationInFile","location":"mokkery-plugin/dev.mokkery.plugin.ext/location-in-file.html","searchKeys":["locationInFile","fun IrExpression.locationInFile(file: IrFile): String","dev.mokkery.plugin.ext.locationInFile"]},{"name":"fun IrFactory.buildClass(name: Name, vararg superTypes: IrType?): IrClass","description":"dev.mokkery.plugin.ext.buildClass","location":"mokkery-plugin/dev.mokkery.plugin.ext/build-class.html","searchKeys":["buildClass","fun IrFactory.buildClass(name: Name, vararg superTypes: IrType?): IrClass","dev.mokkery.plugin.ext.buildClass"]},{"name":"fun IrFunction.eraseFullValueParametersList()","description":"dev.mokkery.plugin.ext.eraseFullValueParametersList","location":"mokkery-plugin/dev.mokkery.plugin.ext/erase-full-value-parameters-list.html","searchKeys":["eraseFullValueParametersList","fun IrFunction.eraseFullValueParametersList()","dev.mokkery.plugin.ext.eraseFullValueParametersList"]},{"name":"fun IrFunction.nonGenericReturnTypeOrAny(context: IrGeneratorContext): IrType","description":"dev.mokkery.plugin.ext.nonGenericReturnTypeOrAny","location":"mokkery-plugin/dev.mokkery.plugin.ext/non-generic-return-type-or-any.html","searchKeys":["nonGenericReturnTypeOrAny","fun IrFunction.nonGenericReturnTypeOrAny(context: IrGeneratorContext): IrType","dev.mokkery.plugin.ext.nonGenericReturnTypeOrAny"]},{"name":"fun IrPluginContext.firstFunction(callableId: CallableId): IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.ext.firstFunction","location":"mokkery-plugin/dev.mokkery.plugin.ext/first-function.html","searchKeys":["firstFunction","fun IrPluginContext.firstFunction(callableId: CallableId): IrSimpleFunctionSymbol","dev.mokkery.plugin.ext.firstFunction"]},{"name":"fun IrPluginContext.getClass(classId: ClassId): IrClass","description":"dev.mokkery.plugin.ext.getClass","location":"mokkery-plugin/dev.mokkery.plugin.ext/get-class.html","searchKeys":["getClass","fun IrPluginContext.getClass(classId: ClassId): IrClass","dev.mokkery.plugin.ext.getClass"]},{"name":"fun IrPluginContext.getIrClassOf(cls: KClass<*>): IrClass","description":"dev.mokkery.plugin.ext.getIrClassOf","location":"mokkery-plugin/dev.mokkery.plugin.ext/get-ir-class-of.html","searchKeys":["getIrClassOf","fun IrPluginContext.getIrClassOf(cls: KClass<*>): IrClass","dev.mokkery.plugin.ext.getIrClassOf"]},{"name":"fun IrSimpleFunction.copyAnnotationsFrom(function: IrSimpleFunction)","description":"dev.mokkery.plugin.ext.copyAnnotationsFrom","location":"mokkery-plugin/dev.mokkery.plugin.ext/copy-annotations-from.html","searchKeys":["copyAnnotationsFrom","fun IrSimpleFunction.copyAnnotationsFrom(function: IrSimpleFunction)","dev.mokkery.plugin.ext.copyAnnotationsFrom"]},{"name":"fun IrSimpleFunction.copyParametersFrom(function: IrSimpleFunction)","description":"dev.mokkery.plugin.ext.copyParametersFrom","location":"mokkery-plugin/dev.mokkery.plugin.ext/copy-parameters-from.html","searchKeys":["copyParametersFrom","fun IrSimpleFunction.copyParametersFrom(function: IrSimpleFunction)","dev.mokkery.plugin.ext.copyParametersFrom"]},{"name":"fun IrType.asTypeParamOrNull(): IrTypeParameter?","description":"dev.mokkery.plugin.ext.asTypeParamOrNull","location":"mokkery-plugin/dev.mokkery.plugin.ext/as-type-param-or-null.html","searchKeys":["asTypeParamOrNull","fun IrType.asTypeParamOrNull(): IrTypeParameter?","dev.mokkery.plugin.ext.asTypeParamOrNull"]},{"name":"fun IrType.extractAllConsumedTypeParameters(): List<IrTypeParameter>","description":"dev.mokkery.plugin.ext.extractAllConsumedTypeParameters","location":"mokkery-plugin/dev.mokkery.plugin.ext/extract-all-consumed-type-parameters.html","searchKeys":["extractAllConsumedTypeParameters","fun IrType.extractAllConsumedTypeParameters(): List<IrTypeParameter>","dev.mokkery.plugin.ext.extractAllConsumedTypeParameters"]},{"name":"fun IrValueParameter.nonGenericReturnTypeOrAny(context: IrGeneratorContext): IrType","description":"dev.mokkery.plugin.ext.nonGenericReturnTypeOrAny","location":"mokkery-plugin/dev.mokkery.plugin.ext/non-generic-return-type-or-any.html","searchKeys":["nonGenericReturnTypeOrAny","fun IrValueParameter.nonGenericReturnTypeOrAny(context: IrGeneratorContext): IrType","dev.mokkery.plugin.ext.nonGenericReturnTypeOrAny"]},{"name":"inline fun IrProperty.addSetter(builder: IrFunctionBuilder.() -> Unit = {}): IrSimpleFunction","description":"dev.mokkery.plugin.ext.addSetter","location":"mokkery-plugin/dev.mokkery.plugin.ext/add-setter.html","searchKeys":["addSetter","inline fun IrProperty.addSetter(builder: IrFunctionBuilder.() -> Unit = {}): IrSimpleFunction","dev.mokkery.plugin.ext.addSetter"]},{"name":"inner class IrClasses","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/index.html","searchKeys":["IrClasses","inner class IrClasses","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses"]},{"name":"inner class IrFunctions","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/index.html","searchKeys":["IrFunctions","inner class IrFunctions","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions"]},{"name":"inner class IrFunctions","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-functions/index.html","searchKeys":["IrFunctions","inner class IrFunctions","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions"]},{"name":"object ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/index.html","searchKeys":["ClassId","object ClassId","dev.mokkery.plugin.Mokkery.ClassId"]},{"name":"object Function","description":"dev.mokkery.plugin.Mokkery.Function","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/index.html","searchKeys":["Function","object Function","dev.mokkery.plugin.Mokkery.Function"]},{"name":"object FunctionId","description":"dev.mokkery.plugin.Kotlin.FunctionId","location":"mokkery-plugin/dev.mokkery.plugin/-kotlin/-function-id/index.html","searchKeys":["FunctionId","object FunctionId","dev.mokkery.plugin.Kotlin.FunctionId"]},{"name":"object FunctionId","description":"dev.mokkery.plugin.Mokkery.FunctionId","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/index.html","searchKeys":["FunctionId","object FunctionId","dev.mokkery.plugin.Mokkery.FunctionId"]},{"name":"object Kotlin","description":"dev.mokkery.plugin.Kotlin","location":"mokkery-plugin/dev.mokkery.plugin/-kotlin/index.html","searchKeys":["Kotlin","object Kotlin","dev.mokkery.plugin.Kotlin"]},{"name":"object Mokkery","description":"dev.mokkery.plugin.Mokkery","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/index.html","searchKeys":["Mokkery","object Mokkery","dev.mokkery.plugin.Mokkery"]},{"name":"open override fun CompilerPluginRegistrar.ExtensionStorage.registerExtensions(configuration: CompilerConfiguration)","description":"dev.mokkery.plugin.MokkeryCompilerPluginRegistrar.registerExtensions","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-compiler-plugin-registrar/register-extensions.html","searchKeys":["registerExtensions","open override fun CompilerPluginRegistrar.ExtensionStorage.registerExtensions(configuration: CompilerConfiguration)","dev.mokkery.plugin.MokkeryCompilerPluginRegistrar.registerExtensions"]},{"name":"open override fun generate(moduleFragment: IrModuleFragment, pluginContext: IrPluginContext)","description":"dev.mokkery.plugin.MokkeryIrGenerationExtension.generate","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-ir-generation-extension/generate.html","searchKeys":["generate","open override fun generate(moduleFragment: IrModuleFragment, pluginContext: IrPluginContext)","dev.mokkery.plugin.MokkeryIrGenerationExtension.generate"]},{"name":"open override fun processOption(option: AbstractCliOption, value: String, configuration: CompilerConfiguration)","description":"dev.mokkery.plugin.MokkeryCommandLineProcessor.processOption","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-command-line-processor/process-option.html","searchKeys":["processOption","open override fun processOption(option: AbstractCliOption, value: String, configuration: CompilerConfiguration)","dev.mokkery.plugin.MokkeryCommandLineProcessor.processOption"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"dev.mokkery.plugin.transformers.CallTrackingNestedTransformer.visitCall","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-nested-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","dev.mokkery.plugin.transformers.CallTrackingNestedTransformer.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.visitCall","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","dev.mokkery.plugin.transformers.CallTrackingTransformer.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"dev.mokkery.plugin.transformers.MockCallsTransformer.visitCall","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mock-calls-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","dev.mokkery.plugin.transformers.MockCallsTransformer.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"dev.mokkery.plugin.transformers.SpyCallsTransformer.visitCall","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-spy-calls-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","dev.mokkery.plugin.transformers.SpyCallsTransformer.visitCall"]},{"name":"open override fun visitDeclaration(declaration: IrDeclarationBase): IrStatement","description":"dev.mokkery.plugin.transformers.CallTrackingNestedTransformer.visitDeclaration","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-nested-transformer/visit-declaration.html","searchKeys":["visitDeclaration","open override fun visitDeclaration(declaration: IrDeclarationBase): IrStatement","dev.mokkery.plugin.transformers.CallTrackingNestedTransformer.visitDeclaration"]},{"name":"open override val pluginId: String","description":"dev.mokkery.plugin.MokkeryCommandLineProcessor.pluginId","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-command-line-processor/plugin-id.html","searchKeys":["pluginId","open override val pluginId: String","dev.mokkery.plugin.MokkeryCommandLineProcessor.pluginId"]},{"name":"open override val pluginOptions: Collection<AbstractCliOption>","description":"dev.mokkery.plugin.MokkeryCommandLineProcessor.pluginOptions","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-command-line-processor/plugin-options.html","searchKeys":["pluginOptions","open override val pluginOptions: Collection<AbstractCliOption>","dev.mokkery.plugin.MokkeryCommandLineProcessor.pluginOptions"]},{"name":"open override val supportsK2: Boolean = true","description":"dev.mokkery.plugin.MokkeryCompilerPluginRegistrar.supportsK2","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery-compiler-plugin-registrar/supports-k2.html","searchKeys":["supportsK2","open override val supportsK2: Boolean = true","dev.mokkery.plugin.MokkeryCompilerPluginRegistrar.supportsK2"]},{"name":"val ArgMatchersScope: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.ArgMatchersScope","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-arg-matchers-scope.html","searchKeys":["ArgMatchersScope","val ArgMatchersScope: ClassId","dev.mokkery.plugin.Mokkery.ClassId.ArgMatchersScope"]},{"name":"val CallArg: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.CallArg","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-call-arg.html","searchKeys":["CallArg","val CallArg: ClassId","dev.mokkery.plugin.Mokkery.ClassId.CallArg"]},{"name":"val CallArg: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.CallArg","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-call-arg.html","searchKeys":["CallArg","val CallArg: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.CallArg"]},{"name":"val FqName.fqName: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, FqName>>","description":"dev.mokkery.plugin.ext.fqName","location":"mokkery-plugin/dev.mokkery.plugin.ext/fq-name.html","searchKeys":["fqName","val FqName.fqName: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, FqName>>","dev.mokkery.plugin.ext.fqName"]},{"name":"val FqName.function: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, CallableId>>","description":"dev.mokkery.plugin.ext.function","location":"mokkery-plugin/dev.mokkery.plugin.ext/function.html","searchKeys":["function","val FqName.function: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, CallableId>>","dev.mokkery.plugin.ext.function"]},{"name":"val FqName.klass: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, ClassId>>","description":"dev.mokkery.plugin.ext.klass","location":"mokkery-plugin/dev.mokkery.plugin.ext/klass.html","searchKeys":["klass","val FqName.klass: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, ClassId>>","dev.mokkery.plugin.ext.klass"]},{"name":"val IrClass.defaultTypeErased: IrType","description":"dev.mokkery.plugin.ext.defaultTypeErased","location":"mokkery-plugin/dev.mokkery.plugin.ext/default-type-erased.html","searchKeys":["defaultTypeErased","val IrClass.defaultTypeErased: IrType","dev.mokkery.plugin.ext.defaultTypeErased"]},{"name":"val IrClass.overridableFunctions: Sequence<IrSimpleFunction>","description":"dev.mokkery.plugin.ext.overridableFunctions","location":"mokkery-plugin/dev.mokkery.plugin.ext/overridable-functions.html","searchKeys":["overridableFunctions","val IrClass.overridableFunctions: Sequence<IrSimpleFunction>","dev.mokkery.plugin.ext.overridableFunctions"]},{"name":"val IrClass.overridableProperties: Sequence<IrProperty>","description":"dev.mokkery.plugin.ext.overridableProperties","location":"mokkery-plugin/dev.mokkery.plugin.ext/overridable-properties.html","searchKeys":["overridableProperties","val IrClass.overridableProperties: Sequence<IrProperty>","dev.mokkery.plugin.ext.overridableProperties"]},{"name":"val MOCK_MODE_KEY: CompilerConfigurationKey<List<MockMode>>","description":"dev.mokkery.plugin.MOCK_MODE_KEY","location":"mokkery-plugin/dev.mokkery.plugin/-m-o-c-k_-m-o-d-e_-k-e-y.html","searchKeys":["MOCK_MODE_KEY","val MOCK_MODE_KEY: CompilerConfigurationKey<List<MockMode>>","dev.mokkery.plugin.MOCK_MODE_KEY"]},{"name":"val MockMode: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MockMode","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mock-mode.html","searchKeys":["MockMode","val MockMode: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MockMode"]},{"name":"val MockMode: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MockMode","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mock-mode.html","searchKeys":["MockMode","val MockMode: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MockMode"]},{"name":"val MokkeryInterceptor: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MokkeryInterceptor","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mokkery-interceptor.html","searchKeys":["MokkeryInterceptor","val MokkeryInterceptor: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MokkeryInterceptor"]},{"name":"val MokkeryInterceptor: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryInterceptor","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mokkery-interceptor.html","searchKeys":["MokkeryInterceptor","val MokkeryInterceptor: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryInterceptor"]},{"name":"val MokkeryInterceptorScope: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MokkeryInterceptorScope","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mokkery-interceptor-scope.html","searchKeys":["MokkeryInterceptorScope","val MokkeryInterceptorScope: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MokkeryInterceptorScope"]},{"name":"val MokkeryInterceptorScope: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryInterceptorScope","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mokkery-interceptor-scope.html","searchKeys":["MokkeryInterceptorScope","val MokkeryInterceptorScope: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryInterceptorScope"]},{"name":"val MokkeryMock: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.MokkeryMock","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/-mokkery-mock.html","searchKeys":["MokkeryMock","val MokkeryMock: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.MokkeryMock"]},{"name":"val MokkeryMock: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MokkeryMock","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mokkery-mock.html","searchKeys":["MokkeryMock","val MokkeryMock: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MokkeryMock"]},{"name":"val MokkeryMock: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryMock","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mokkery-mock.html","searchKeys":["MokkeryMock","val MokkeryMock: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryMock"]},{"name":"val MokkeryMock: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions.MokkeryMock","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-functions/-mokkery-mock.html","searchKeys":["MokkeryMock","val MokkeryMock: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions.MokkeryMock"]},{"name":"val MokkeryMockScope: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MokkeryMockScope","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mokkery-mock-scope.html","searchKeys":["MokkeryMockScope","val MokkeryMockScope: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MokkeryMockScope"]},{"name":"val MokkeryMockScope: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryMockScope","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mokkery-mock-scope.html","searchKeys":["MokkeryMockScope","val MokkeryMockScope: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkeryMockScope"]},{"name":"val MokkerySpy: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.MokkerySpy","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/-mokkery-spy.html","searchKeys":["MokkerySpy","val MokkerySpy: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.MokkerySpy"]},{"name":"val MokkerySpy: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MokkerySpy","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mokkery-spy.html","searchKeys":["MokkerySpy","val MokkerySpy: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MokkerySpy"]},{"name":"val MokkerySpy: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkerySpy","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mokkery-spy.html","searchKeys":["MokkerySpy","val MokkerySpy: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkerySpy"]},{"name":"val MokkerySpy: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions.MokkerySpy","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-functions/-mokkery-spy.html","searchKeys":["MokkerySpy","val MokkerySpy: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrFunctions.MokkerySpy"]},{"name":"val MokkerySpyScope: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.MokkerySpyScope","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-mokkery-spy-scope.html","searchKeys":["MokkerySpyScope","val MokkerySpyScope: ClassId","dev.mokkery.plugin.Mokkery.ClassId.MokkerySpyScope"]},{"name":"val MokkerySpyScope: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkerySpyScope","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-mokkery-spy-scope.html","searchKeys":["MokkerySpyScope","val MokkerySpyScope: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.MokkerySpyScope"]},{"name":"val TemplatingInterceptor: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.TemplatingInterceptor","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-templating-interceptor.html","searchKeys":["TemplatingInterceptor","val TemplatingInterceptor: ClassId","dev.mokkery.plugin.Mokkery.ClassId.TemplatingInterceptor"]},{"name":"val TemplatingInterceptor: IrClass","description":"dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.TemplatingInterceptor","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-mokkery-base-transformer/-ir-classes/-templating-interceptor.html","searchKeys":["TemplatingInterceptor","val TemplatingInterceptor: IrClass","dev.mokkery.plugin.transformers.MokkeryBaseTransformer.IrClasses.TemplatingInterceptor"]},{"name":"val TemplatingScope: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.TemplatingScope","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/-templating-scope.html","searchKeys":["TemplatingScope","val TemplatingScope: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.TemplatingScope"]},{"name":"val TemplatingScope: ClassId","description":"dev.mokkery.plugin.Mokkery.ClassId.TemplatingScope","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-class-id/-templating-scope.html","searchKeys":["TemplatingScope","val TemplatingScope: ClassId","dev.mokkery.plugin.Mokkery.ClassId.TemplatingScope"]},{"name":"val TemplatingScope: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.TemplatingScope","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/-templating-scope.html","searchKeys":["TemplatingScope","val TemplatingScope: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.TemplatingScope"]},{"name":"val VERIFY_MODE_KEY: CompilerConfigurationKey<List<VerifyMode>>","description":"dev.mokkery.plugin.VERIFY_MODE_KEY","location":"mokkery-plugin/dev.mokkery.plugin/-v-e-r-i-f-y_-m-o-d-e_-k-e-y.html","searchKeys":["VERIFY_MODE_KEY","val VERIFY_MODE_KEY: CompilerConfigurationKey<List<VerifyMode>>","dev.mokkery.plugin.VERIFY_MODE_KEY"]},{"name":"val dev_mokkery: FqName","description":"dev.mokkery.plugin.Mokkery.dev_mokkery","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/dev_mokkery.html","searchKeys":["dev_mokkery","val dev_mokkery: FqName","dev.mokkery.plugin.Mokkery.dev_mokkery"]},{"name":"val dev_mokkery_internal: FqName","description":"dev.mokkery.plugin.Mokkery.dev_mokkery_internal","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/dev_mokkery_internal.html","searchKeys":["dev_mokkery_internal","val dev_mokkery_internal: FqName","dev.mokkery.plugin.Mokkery.dev_mokkery_internal"]},{"name":"val dev_mokkery_internal_templating: FqName","description":"dev.mokkery.plugin.Mokkery.dev_mokkery_internal_templating","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/dev_mokkery_internal_templating.html","searchKeys":["dev_mokkery_internal_templating","val dev_mokkery_internal_templating: FqName","dev.mokkery.plugin.Mokkery.dev_mokkery_internal_templating"]},{"name":"val dev_mokkery_internal_tracing: FqName","description":"dev.mokkery.plugin.Mokkery.dev_mokkery_internal_tracing","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/dev_mokkery_internal_tracing.html","searchKeys":["dev_mokkery_internal_tracing","val dev_mokkery_internal_tracing: FqName","dev.mokkery.plugin.Mokkery.dev_mokkery_internal_tracing"]},{"name":"val dev_mokkery_matcher: FqName","description":"dev.mokkery.plugin.Mokkery.dev_mokkery_matcher","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/dev_mokkery_matcher.html","searchKeys":["dev_mokkery_matcher","val dev_mokkery_matcher: FqName","dev.mokkery.plugin.Mokkery.dev_mokkery_matcher"]},{"name":"val every: FqName","description":"dev.mokkery.plugin.Mokkery.Function.every","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/every.html","searchKeys":["every","val every: FqName","dev.mokkery.plugin.Mokkery.Function.every"]},{"name":"val everySuspend: FqName","description":"dev.mokkery.plugin.Mokkery.Function.everySuspend","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/every-suspend.html","searchKeys":["everySuspend","val everySuspend: FqName","dev.mokkery.plugin.Mokkery.Function.everySuspend"]},{"name":"val fqName: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, FqName>>","description":"dev.mokkery.plugin.ext.fqName","location":"mokkery-plugin/dev.mokkery.plugin.ext/fq-name.html","searchKeys":["fqName","val fqName: PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, FqName>>","dev.mokkery.plugin.ext.fqName"]},{"name":"val internalEvery: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.internalEvery","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/internal-every.html","searchKeys":["internalEvery","val internalEvery: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.internalEvery"]},{"name":"val internalEvery: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalEvery","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/internal-every.html","searchKeys":["internalEvery","val internalEvery: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalEvery"]},{"name":"val internalEverySuspend: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.internalEverySuspend","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/internal-every-suspend.html","searchKeys":["internalEverySuspend","val internalEverySuspend: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.internalEverySuspend"]},{"name":"val internalEverySuspend: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalEverySuspend","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/internal-every-suspend.html","searchKeys":["internalEverySuspend","val internalEverySuspend: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalEverySuspend"]},{"name":"val internalVerify: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.internalVerify","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/internal-verify.html","searchKeys":["internalVerify","val internalVerify: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.internalVerify"]},{"name":"val internalVerify: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalVerify","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/internal-verify.html","searchKeys":["internalVerify","val internalVerify: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalVerify"]},{"name":"val internalVerifySuspend: CallableId","description":"dev.mokkery.plugin.Mokkery.FunctionId.internalVerifySuspend","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function-id/internal-verify-suspend.html","searchKeys":["internalVerifySuspend","val internalVerifySuspend: CallableId","dev.mokkery.plugin.Mokkery.FunctionId.internalVerifySuspend"]},{"name":"val internalVerifySuspend: IrSimpleFunctionSymbol","description":"dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalVerifySuspend","location":"mokkery-plugin/dev.mokkery.plugin.transformers/-call-tracking-transformer/-ir-functions/internal-verify-suspend.html","searchKeys":["internalVerifySuspend","val internalVerifySuspend: IrSimpleFunctionSymbol","dev.mokkery.plugin.transformers.CallTrackingTransformer.IrFunctions.internalVerifySuspend"]},{"name":"val kotlin_text: FqName","description":"dev.mokkery.plugin.Kotlin.kotlin_text","location":"mokkery-plugin/dev.mokkery.plugin/-kotlin/kotlin_text.html","searchKeys":["kotlin_text","val kotlin_text: FqName","dev.mokkery.plugin.Kotlin.kotlin_text"]},{"name":"val mock: FqName","description":"dev.mokkery.plugin.Mokkery.Function.mock","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/mock.html","searchKeys":["mock","val mock: FqName","dev.mokkery.plugin.Mokkery.Function.mock"]},{"name":"val spy: FqName","description":"dev.mokkery.plugin.Mokkery.Function.spy","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/spy.html","searchKeys":["spy","val spy: FqName","dev.mokkery.plugin.Mokkery.Function.spy"]},{"name":"val toString: CallableId","description":"dev.mokkery.plugin.Kotlin.FunctionId.toString","location":"mokkery-plugin/dev.mokkery.plugin/-kotlin/-function-id/to-string.html","searchKeys":["toString","val toString: CallableId","dev.mokkery.plugin.Kotlin.FunctionId.toString"]},{"name":"val verify: FqName","description":"dev.mokkery.plugin.Mokkery.Function.verify","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/verify.html","searchKeys":["verify","val verify: FqName","dev.mokkery.plugin.Mokkery.Function.verify"]},{"name":"val verifySuspend: FqName","description":"dev.mokkery.plugin.Mokkery.Function.verifySuspend","location":"mokkery-plugin/dev.mokkery.plugin/-mokkery/-function/verify-suspend.html","searchKeys":["verifySuspend","val verifySuspend: FqName","dev.mokkery.plugin.Mokkery.Function.verifySuspend"]},{"name":"annotation class DelicateMokkeryApi","description":"dev.mokkery.annotations.DelicateMokkeryApi","location":"mokkery-core/dev.mokkery.annotations/-delicate-mokkery-api/index.html","searchKeys":["DelicateMokkeryApi","annotation class DelicateMokkeryApi","dev.mokkery.annotations.DelicateMokkeryApi"]},{"name":"annotation class InternalMokkeryApi","description":"dev.mokkery.annotations.InternalMokkeryApi","location":"mokkery-core/dev.mokkery.annotations/-internal-mokkery-api/index.html","searchKeys":["InternalMokkeryApi","annotation class InternalMokkeryApi","dev.mokkery.annotations.InternalMokkeryApi"]},{"name":"autoUnit","description":"dev.mokkery.MockMode.autoUnit","location":"mokkery-core/dev.mokkery/-mock-mode/auto-unit/index.html","searchKeys":["autoUnit","autoUnit","dev.mokkery.MockMode.autoUnit"]},{"name":"autofill","description":"dev.mokkery.MockMode.autofill","location":"mokkery-core/dev.mokkery/-mock-mode/autofill/index.html","searchKeys":["autofill","autofill","dev.mokkery.MockMode.autofill"]},{"name":"const val GROUP: String","description":"dev.mokkery.MokkeryConfig.GROUP","location":"mokkery-core/dev.mokkery/-mokkery-config/-g-r-o-u-p.html","searchKeys":["GROUP","const val GROUP: String","dev.mokkery.MokkeryConfig.GROUP"]},{"name":"const val KOTLIN_VERSION: String","description":"dev.mokkery.MokkeryConfig.KOTLIN_VERSION","location":"mokkery-core/dev.mokkery/-mokkery-config/-k-o-t-l-i-n_-v-e-r-s-i-o-n.html","searchKeys":["KOTLIN_VERSION","const val KOTLIN_VERSION: String","dev.mokkery.MokkeryConfig.KOTLIN_VERSION"]},{"name":"const val PLUGIN_ARTIFACT_ID: String","description":"dev.mokkery.MokkeryConfig.PLUGIN_ARTIFACT_ID","location":"mokkery-core/dev.mokkery/-mokkery-config/-p-l-u-g-i-n_-a-r-t-i-f-a-c-t_-i-d.html","searchKeys":["PLUGIN_ARTIFACT_ID","const val PLUGIN_ARTIFACT_ID: String","dev.mokkery.MokkeryConfig.PLUGIN_ARTIFACT_ID"]},{"name":"const val PLUGIN_ID: String","description":"dev.mokkery.MokkeryConfig.PLUGIN_ID","location":"mokkery-core/dev.mokkery/-mokkery-config/-p-l-u-g-i-n_-i-d.html","searchKeys":["PLUGIN_ID","const val PLUGIN_ID: String","dev.mokkery.MokkeryConfig.PLUGIN_ID"]},{"name":"const val RUNTIME_DEPENDENCY: String","description":"dev.mokkery.MokkeryConfig.RUNTIME_DEPENDENCY","location":"mokkery-core/dev.mokkery/-mokkery-config/-r-u-n-t-i-m-e_-d-e-p-e-n-d-e-n-c-y.html","searchKeys":["RUNTIME_DEPENDENCY","const val RUNTIME_DEPENDENCY: String","dev.mokkery.MokkeryConfig.RUNTIME_DEPENDENCY"]},{"name":"const val VERSION: String","description":"dev.mokkery.MokkeryConfig.VERSION","location":"mokkery-core/dev.mokkery/-mokkery-config/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","dev.mokkery.MokkeryConfig.VERSION"]},{"name":"constructor(atLeast: Int, atMost: Int)","description":"dev.mokkery.verify.SoftVerifyMode.SoftVerifyMode","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/-soft-verify-mode.html","searchKeys":["SoftVerifyMode","constructor(atLeast: Int, atMost: Int)","dev.mokkery.verify.SoftVerifyMode.SoftVerifyMode"]},{"name":"constructor(message: String? = null, cause: Throwable? = null)","description":"dev.mokkery.MokkeryRuntimeException.MokkeryRuntimeException","location":"mokkery-core/dev.mokkery/-mokkery-runtime-exception/-mokkery-runtime-exception.html","searchKeys":["MokkeryRuntimeException","constructor(message: String? = null, cause: Throwable? = null)","dev.mokkery.MokkeryRuntimeException.MokkeryRuntimeException"]},{"name":"data class SoftVerifyMode(val atLeast: Int, val atMost: Int) : VerifyMode","description":"dev.mokkery.verify.SoftVerifyMode","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/index.html","searchKeys":["SoftVerifyMode","data class SoftVerifyMode(val atLeast: Int, val atMost: Int) : VerifyMode","dev.mokkery.verify.SoftVerifyMode"]},{"name":"enum MockMode : Enum<MockMode> ","description":"dev.mokkery.MockMode","location":"mokkery-core/dev.mokkery/-mock-mode/index.html","searchKeys":["MockMode","enum MockMode : Enum<MockMode> ","dev.mokkery.MockMode"]},{"name":"fun atLeast(n: Int): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.atLeast","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/at-least.html","searchKeys":["atLeast","fun atLeast(n: Int): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.atLeast"]},{"name":"fun atMost(n: Int): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.atMost","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/at-most.html","searchKeys":["atMost","fun atMost(n: Int): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.atMost"]},{"name":"fun deserialize(value: String): VerifyMode","description":"dev.mokkery.verify.VerifyModeSerializer.deserialize","location":"mokkery-core/dev.mokkery.verify/-verify-mode-serializer/deserialize.html","searchKeys":["deserialize","fun deserialize(value: String): VerifyMode","dev.mokkery.verify.VerifyModeSerializer.deserialize"]},{"name":"fun exactly(n: Int): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.exactly","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/exactly.html","searchKeys":["exactly","fun exactly(n: Int): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.exactly"]},{"name":"fun inRange(range: IntRange): VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.inRange","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/in-range.html","searchKeys":["inRange","fun inRange(range: IntRange): VerifyMode","dev.mokkery.verify.VerifyMode.Companion.inRange"]},{"name":"fun serialize(verifyMode: VerifyMode): String","description":"dev.mokkery.verify.VerifyModeSerializer.serialize","location":"mokkery-core/dev.mokkery.verify/-verify-mode-serializer/serialize.html","searchKeys":["serialize","fun serialize(verifyMode: VerifyMode): String","dev.mokkery.verify.VerifyModeSerializer.serialize"]},{"name":"fun valueOf(value: String): MockMode","description":"dev.mokkery.MockMode.valueOf","location":"mokkery-core/dev.mokkery/-mock-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MockMode","dev.mokkery.MockMode.valueOf"]},{"name":"fun values(): Array<MockMode>","description":"dev.mokkery.MockMode.values","location":"mokkery-core/dev.mokkery/-mock-mode/values.html","searchKeys":["values","fun values(): Array<MockMode>","dev.mokkery.MockMode.values"]},{"name":"object Companion","description":"dev.mokkery.verify.VerifyMode.Companion","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/index.html","searchKeys":["Companion","object Companion","dev.mokkery.verify.VerifyMode.Companion"]},{"name":"object ExhaustiveOrderVerifyMode : VerifyMode","description":"dev.mokkery.verify.ExhaustiveOrderVerifyMode","location":"mokkery-core/dev.mokkery.verify/-exhaustive-order-verify-mode/index.html","searchKeys":["ExhaustiveOrderVerifyMode","object ExhaustiveOrderVerifyMode : VerifyMode","dev.mokkery.verify.ExhaustiveOrderVerifyMode"]},{"name":"object ExhaustiveSoftVerifyMode : VerifyMode","description":"dev.mokkery.verify.ExhaustiveSoftVerifyMode","location":"mokkery-core/dev.mokkery.verify/-exhaustive-soft-verify-mode/index.html","searchKeys":["ExhaustiveSoftVerifyMode","object ExhaustiveSoftVerifyMode : VerifyMode","dev.mokkery.verify.ExhaustiveSoftVerifyMode"]},{"name":"object MokkeryCompilerDefaults","description":"dev.mokkery.MokkeryCompilerDefaults","location":"mokkery-core/dev.mokkery/-mokkery-compiler-defaults/index.html","searchKeys":["MokkeryCompilerDefaults","object MokkeryCompilerDefaults","dev.mokkery.MokkeryCompilerDefaults"]},{"name":"object MokkeryConfig","description":"dev.mokkery.MokkeryConfig","location":"mokkery-core/dev.mokkery/-mokkery-config/index.html","searchKeys":["MokkeryConfig","object MokkeryConfig","dev.mokkery.MokkeryConfig"]},{"name":"object NotVerifyMode : VerifyMode","description":"dev.mokkery.verify.NotVerifyMode","location":"mokkery-core/dev.mokkery.verify/-not-verify-mode/index.html","searchKeys":["NotVerifyMode","object NotVerifyMode : VerifyMode","dev.mokkery.verify.NotVerifyMode"]},{"name":"object OrderVerifyMode : VerifyMode","description":"dev.mokkery.verify.OrderVerifyMode","location":"mokkery-core/dev.mokkery.verify/-order-verify-mode/index.html","searchKeys":["OrderVerifyMode","object OrderVerifyMode : VerifyMode","dev.mokkery.verify.OrderVerifyMode"]},{"name":"object VerifyModeSerializer","description":"dev.mokkery.verify.VerifyModeSerializer","location":"mokkery-core/dev.mokkery.verify/-verify-mode-serializer/index.html","searchKeys":["VerifyModeSerializer","object VerifyModeSerializer","dev.mokkery.verify.VerifyModeSerializer"]},{"name":"open class MokkeryRuntimeException(message: String? = null, cause: Throwable? = null) : RuntimeException","description":"dev.mokkery.MokkeryRuntimeException","location":"mokkery-core/dev.mokkery/-mokkery-runtime-exception/index.html","searchKeys":["MokkeryRuntimeException","open class MokkeryRuntimeException(message: String? = null, cause: Throwable? = null) : RuntimeException","dev.mokkery.MokkeryRuntimeException"]},{"name":"sealed class VerifyMode","description":"dev.mokkery.verify.VerifyMode","location":"mokkery-core/dev.mokkery.verify/-verify-mode/index.html","searchKeys":["VerifyMode","sealed class VerifyMode","dev.mokkery.verify.VerifyMode"]},{"name":"strict","description":"dev.mokkery.MockMode.strict","location":"mokkery-core/dev.mokkery/-mock-mode/strict/index.html","searchKeys":["strict","strict","dev.mokkery.MockMode.strict"]},{"name":"val SUPPORTED_KOTLIN_VERSIONS: List<String>","description":"dev.mokkery.MokkeryConfig.SUPPORTED_KOTLIN_VERSIONS","location":"mokkery-core/dev.mokkery/-mokkery-config/-s-u-p-p-o-r-t-e-d_-k-o-t-l-i-n_-v-e-r-s-i-o-n-s.html","searchKeys":["SUPPORTED_KOTLIN_VERSIONS","val SUPPORTED_KOTLIN_VERSIONS: List<String>","dev.mokkery.MokkeryConfig.SUPPORTED_KOTLIN_VERSIONS"]},{"name":"val atLeast: Int","description":"dev.mokkery.verify.SoftVerifyMode.atLeast","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/at-least.html","searchKeys":["atLeast","val atLeast: Int","dev.mokkery.verify.SoftVerifyMode.atLeast"]},{"name":"val atMost: Int","description":"dev.mokkery.verify.SoftVerifyMode.atMost","location":"mokkery-core/dev.mokkery.verify/-soft-verify-mode/at-most.html","searchKeys":["atMost","val atMost: Int","dev.mokkery.verify.SoftVerifyMode.atMost"]},{"name":"val exhaustive: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.exhaustive","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/exhaustive.html","searchKeys":["exhaustive","val exhaustive: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.exhaustive"]},{"name":"val exhaustiveOrder: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.exhaustiveOrder","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/exhaustive-order.html","searchKeys":["exhaustiveOrder","val exhaustiveOrder: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.exhaustiveOrder"]},{"name":"val mockMode: MockMode","description":"dev.mokkery.MokkeryCompilerDefaults.mockMode","location":"mokkery-core/dev.mokkery/-mokkery-compiler-defaults/mock-mode.html","searchKeys":["mockMode","val mockMode: MockMode","dev.mokkery.MokkeryCompilerDefaults.mockMode"]},{"name":"val not: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.not","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/not.html","searchKeys":["not","val not: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.not"]},{"name":"val order: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.order","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/order.html","searchKeys":["order","val order: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.order"]},{"name":"val soft: VerifyMode","description":"dev.mokkery.verify.VerifyMode.Companion.soft","location":"mokkery-core/dev.mokkery.verify/-verify-mode/-companion/soft.html","searchKeys":["soft","val soft: VerifyMode","dev.mokkery.verify.VerifyMode.Companion.soft"]},{"name":"val verifyMode: VerifyMode","description":"dev.mokkery.MokkeryCompilerDefaults.verifyMode","location":"mokkery-core/dev.mokkery/-mokkery-compiler-defaults/verify-mode.html","searchKeys":["verifyMode","val verifyMode: VerifyMode","dev.mokkery.MokkeryCompilerDefaults.verifyMode"]},{"name":"Eq","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Eq","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-eq/index.html","searchKeys":["Eq","Eq","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Eq"]},{"name":"Gt","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gt","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-gt/index.html","searchKeys":["Gt","Gt","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gt"]},{"name":"Gte","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gte","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-gte/index.html","searchKeys":["Gte","Gte","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Gte"]},{"name":"Lt","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lt","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-lt/index.html","searchKeys":["Lt","Lt","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lt"]},{"name":"Lte","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lte","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/-lte/index.html","searchKeys":["Lte","Lte","dev.mokkery.matcher.ArgMatcher.Comparing.Type.Lte"]},{"name":"abstract fun <T> matches(argType: KClass<*>, matcher: ArgMatcher<T>): T","description":"dev.mokkery.matcher.ArgMatchersScope.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matchers-scope/matches.html","searchKeys":["matches","abstract fun <T> matches(argType: KClass<*>, matcher: ArgMatcher<T>): T","dev.mokkery.matcher.ArgMatchersScope.matches"]},{"name":"abstract fun answers(answer: Answer<T>)","description":"dev.mokkery.answering.AnsweringScope.answers","location":"mokkery-runtime/dev.mokkery.answering/-answering-scope/answers.html","searchKeys":["answers","abstract fun answers(answer: Answer<T>)","dev.mokkery.answering.AnsweringScope.answers"]},{"name":"abstract fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/call.html","searchKeys":["call","abstract fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.call"]},{"name":"abstract fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/matches.html","searchKeys":["matches","abstract fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.matches"]},{"name":"class AllThat(type: KClass<*>, predicate: (Any?) -> Boolean) : VarArgMatcher<Any?> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/index.html","searchKeys":["AllThat","class AllThat(type: KClass<*>, predicate: (Any?) -> Boolean) : VarArgMatcher<Any?> ","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat"]},{"name":"class AnyOf(type: KClass<*>) : VarArgMatcher<Any?> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/index.html","searchKeys":["AnyOf","class AnyOf(type: KClass<*>) : VarArgMatcher<Any?> ","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf"]},{"name":"class Block<T>(block: (FunctionScope) -> T) : Answer<T> ","description":"dev.mokkery.answering.Answer.Block","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/index.html","searchKeys":["Block","class Block<T>(block: (FunctionScope) -> T) : Answer<T> ","dev.mokkery.answering.Answer.Block"]},{"name":"class BlockSuspend<T>(block: suspend (FunctionScope) -> T) : Answer.Suspending<T> ","description":"dev.mokkery.answering.Answer.BlockSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/index.html","searchKeys":["BlockSuspend","class BlockSuspend<T>(block: suspend (FunctionScope) -> T) : Answer.Suspending<T> ","dev.mokkery.answering.Answer.BlockSuspend"]},{"name":"class Comparing<T : Comparable<T>>(value: T, type: ArgMatcher.Comparing.Type) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.Comparing","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/index.html","searchKeys":["Comparing","class Comparing<T : Comparable<T>>(value: T, type: ArgMatcher.Comparing.Type) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.Comparing"]},{"name":"class Const<T>(value: T) : Answer<T> ","description":"dev.mokkery.answering.Answer.Const","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/index.html","searchKeys":["Const","class Const<T>(value: T) : Answer<T> ","dev.mokkery.answering.Answer.Const"]},{"name":"class FunctionScope(val returnType: KClass<*>, val args: List<Any?>)","description":"dev.mokkery.answering.FunctionScope","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/index.html","searchKeys":["FunctionScope","class FunctionScope(val returnType: KClass<*>, val args: List<Any?>)","dev.mokkery.answering.FunctionScope"]},{"name":"class Matching<T>(predicate: (T) -> Boolean, toStringFun: () -> String) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.Matching","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/index.html","searchKeys":["Matching","class Matching<T>(predicate: (T) -> Boolean, toStringFun: () -> String) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.Matching"]},{"name":"class Throws(throwable: Throwable) : Answer<Nothing> ","description":"dev.mokkery.answering.Answer.Throws","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/index.html","searchKeys":["Throws","class Throws(throwable: Throwable) : Answer<Nothing> ","dev.mokkery.answering.Answer.Throws"]},{"name":"constructor(block: (FunctionScope) -> T)","description":"dev.mokkery.answering.Answer.Block.Block","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/-block.html","searchKeys":["Block","constructor(block: (FunctionScope) -> T)","dev.mokkery.answering.Answer.Block.Block"]},{"name":"constructor(block: suspend (FunctionScope) -> T)","description":"dev.mokkery.answering.Answer.BlockSuspend.BlockSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/-block-suspend.html","searchKeys":["BlockSuspend","constructor(block: suspend (FunctionScope) -> T)","dev.mokkery.answering.Answer.BlockSuspend.BlockSuspend"]},{"name":"constructor(predicate: (T) -> Boolean, toStringFun: () -> String)","description":"dev.mokkery.matcher.ArgMatcher.Matching.Matching","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/-matching.html","searchKeys":["Matching","constructor(predicate: (T) -> Boolean, toStringFun: () -> String)","dev.mokkery.matcher.ArgMatcher.Matching.Matching"]},{"name":"constructor(returnType: KClass<*>, args: List<Any?>)","description":"dev.mokkery.answering.FunctionScope.FunctionScope","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/-function-scope.html","searchKeys":["FunctionScope","constructor(returnType: KClass<*>, args: List<Any?>)","dev.mokkery.answering.FunctionScope.FunctionScope"]},{"name":"constructor(throwable: Throwable)","description":"dev.mokkery.answering.Answer.Throws.Throws","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/-throws.html","searchKeys":["Throws","constructor(throwable: Throwable)","dev.mokkery.answering.Answer.Throws.Throws"]},{"name":"constructor(type: KClass<*>)","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.AnyOf","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/-any-of.html","searchKeys":["AnyOf","constructor(type: KClass<*>)","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.AnyOf"]},{"name":"constructor(type: KClass<*>, predicate: (Any?) -> Boolean)","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.AllThat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/-all-that.html","searchKeys":["AllThat","constructor(type: KClass<*>, predicate: (Any?) -> Boolean)","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.AllThat"]},{"name":"constructor(value: T)","description":"dev.mokkery.answering.Answer.Const.Const","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/-const.html","searchKeys":["Const","constructor(value: T)","dev.mokkery.answering.Answer.Const.Const"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.Equals.Equals","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/-equals.html","searchKeys":["Equals","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.Equals.Equals"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.EqualsRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/-equals-ref.html","searchKeys":["EqualsRef","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.EqualsRef.EqualsRef"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.NotEqual","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/-not-equal.html","searchKeys":["NotEqual","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.NotEqual.NotEqual"]},{"name":"constructor(value: T)","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.NotEqualRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/-not-equal-ref.html","searchKeys":["NotEqualRef","constructor(value: T)","dev.mokkery.matcher.ArgMatcher.NotEqualRef.NotEqualRef"]},{"name":"constructor(value: T, type: ArgMatcher.Comparing.Type)","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Comparing","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-comparing.html","searchKeys":["Comparing","constructor(value: T, type: ArgMatcher.Comparing.Type)","dev.mokkery.matcher.ArgMatcher.Comparing.Comparing"]},{"name":"data class Equals<T>(value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.Equals","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/index.html","searchKeys":["Equals","data class Equals<T>(value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.Equals"]},{"name":"data class EqualsRef<T>(value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/index.html","searchKeys":["EqualsRef","data class EqualsRef<T>(value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.EqualsRef"]},{"name":"data class NotEqual<T>(value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.NotEqual","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/index.html","searchKeys":["NotEqual","data class NotEqual<T>(value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.NotEqual"]},{"name":"data class NotEqualRef<T>(value: T) : ArgMatcher<T> ","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/index.html","searchKeys":["NotEqualRef","data class NotEqualRef<T>(value: T) : ArgMatcher<T> ","dev.mokkery.matcher.ArgMatcher.NotEqualRef"]},{"name":"enum Type : Enum<ArgMatcher.Comparing.Type> ","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/index.html","searchKeys":["Type","enum Type : Enum<ArgMatcher.Comparing.Type> ","dev.mokkery.matcher.ArgMatcher.Comparing.Type"]},{"name":"fun <T> every(block: ArgMatchersScope.() -> T): BlockingAnsweringScope<T>","description":"dev.mokkery.every","location":"mokkery-runtime/dev.mokkery/every.html","searchKeys":["every","fun <T> every(block: ArgMatchersScope.() -> T): BlockingAnsweringScope<T>","dev.mokkery.every"]},{"name":"fun <T> everySuspend(block: suspend ArgMatchersScope.() -> T): SuspendAnsweringScope<T>","description":"dev.mokkery.everySuspend","location":"mokkery-runtime/dev.mokkery/every-suspend.html","searchKeys":["everySuspend","fun <T> everySuspend(block: suspend ArgMatchersScope.() -> T): SuspendAnsweringScope<T>","dev.mokkery.everySuspend"]},{"name":"fun interface ArgMatcher<in T>","description":"dev.mokkery.matcher.ArgMatcher","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/index.html","searchKeys":["ArgMatcher","fun interface ArgMatcher<in T>","dev.mokkery.matcher.ArgMatcher"]},{"name":"fun resetAnswers(vararg mocks: Any)","description":"dev.mokkery.resetAnswers","location":"mokkery-runtime/dev.mokkery/reset-answers.html","searchKeys":["resetAnswers","fun resetAnswers(vararg mocks: Any)","dev.mokkery.resetAnswers"]},{"name":"fun resetCalls(vararg mocks: Any)","description":"dev.mokkery.resetCalls","location":"mokkery-runtime/dev.mokkery/reset-calls.html","searchKeys":["resetCalls","fun resetCalls(vararg mocks: Any)","dev.mokkery.resetCalls"]},{"name":"fun valueOf(value: String): ArgMatcher.Comparing.Type","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.valueOf","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ArgMatcher.Comparing.Type","dev.mokkery.matcher.ArgMatcher.Comparing.Type.valueOf"]},{"name":"fun values(): Array<ArgMatcher.Comparing.Type>","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.values","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/values.html","searchKeys":["values","fun values(): Array<ArgMatcher.Comparing.Type>","dev.mokkery.matcher.ArgMatcher.Comparing.Type.values"]},{"name":"fun verify(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: ArgMatchersScope.() -> Unit)","description":"dev.mokkery.verify","location":"mokkery-runtime/dev.mokkery/verify.html","searchKeys":["verify","fun verify(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: ArgMatchersScope.() -> Unit)","dev.mokkery.verify"]},{"name":"fun verifyNoMoreCalls(vararg mocks: Any)","description":"dev.mokkery.verifyNoMoreCalls","location":"mokkery-runtime/dev.mokkery/verify-no-more-calls.html","searchKeys":["verifyNoMoreCalls","fun verifyNoMoreCalls(vararg mocks: Any)","dev.mokkery.verifyNoMoreCalls"]},{"name":"fun verifySuspend(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: suspend ArgMatchersScope.() -> Unit)","description":"dev.mokkery.verifySuspend","location":"mokkery-runtime/dev.mokkery/verify-suspend.html","searchKeys":["verifySuspend","fun verifySuspend(mode: VerifyMode = MokkeryCompilerDefaults.verifyMode, block: suspend ArgMatchersScope.() -> Unit)","dev.mokkery.verifySuspend"]},{"name":"infix fun <T> AnsweringScope<T>.returns(value: T)","description":"dev.mokkery.answering.returns","location":"mokkery-runtime/dev.mokkery.answering/returns.html","searchKeys":["returns","infix fun <T> AnsweringScope<T>.returns(value: T)","dev.mokkery.answering.returns"]},{"name":"infix fun <T> AnsweringScope<T>.throws(error: Throwable)","description":"dev.mokkery.answering.throws","location":"mokkery-runtime/dev.mokkery.answering/throws.html","searchKeys":["throws","infix fun <T> AnsweringScope<T>.throws(error: Throwable)","dev.mokkery.answering.throws"]},{"name":"infix fun <T> BlockingAnsweringScope<T>.calls(block: (FunctionScope) -> T)","description":"dev.mokkery.answering.calls","location":"mokkery-runtime/dev.mokkery.answering/calls.html","searchKeys":["calls","infix fun <T> BlockingAnsweringScope<T>.calls(block: (FunctionScope) -> T)","dev.mokkery.answering.calls"]},{"name":"infix fun <T> SuspendAnsweringScope<T>.calls(block: suspend (FunctionScope) -> T)","description":"dev.mokkery.answering.calls","location":"mokkery-runtime/dev.mokkery.answering/calls.html","searchKeys":["calls","infix fun <T> SuspendAnsweringScope<T>.calls(block: suspend (FunctionScope) -> T)","dev.mokkery.answering.calls"]},{"name":"inline fun <T : Any> mock(mode: MockMode = MokkeryCompilerDefaults.mockMode, block: T.() -> Unit = { }): T","description":"dev.mokkery.mock","location":"mokkery-runtime/dev.mokkery/mock.html","searchKeys":["mock","inline fun <T : Any> mock(mode: MockMode = MokkeryCompilerDefaults.mockMode, block: T.() -> Unit = { }): T","dev.mokkery.mock"]},{"name":"inline fun <T : Any> spy(obj: T): T","description":"dev.mokkery.spy","location":"mokkery-runtime/dev.mokkery/spy.html","searchKeys":["spy","inline fun <T : Any> spy(obj: T): T","dev.mokkery.spy"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.gt(value: T): T","description":"dev.mokkery.matcher.gt","location":"mokkery-runtime/dev.mokkery.matcher/gt.html","searchKeys":["gt","inline fun <T : Comparable<T>> ArgMatchersScope.gt(value: T): T","dev.mokkery.matcher.gt"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.gte(value: T): T","description":"dev.mokkery.matcher.gte","location":"mokkery-runtime/dev.mokkery.matcher/gte.html","searchKeys":["gte","inline fun <T : Comparable<T>> ArgMatchersScope.gte(value: T): T","dev.mokkery.matcher.gte"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.lt(value: T): T","description":"dev.mokkery.matcher.lt","location":"mokkery-runtime/dev.mokkery.matcher/lt.html","searchKeys":["lt","inline fun <T : Comparable<T>> ArgMatchersScope.lt(value: T): T","dev.mokkery.matcher.lt"]},{"name":"inline fun <T : Comparable<T>> ArgMatchersScope.lte(value: T): T","description":"dev.mokkery.matcher.lte","location":"mokkery-runtime/dev.mokkery.matcher/lte.html","searchKeys":["lte","inline fun <T : Comparable<T>> ArgMatchersScope.lte(value: T): T","dev.mokkery.matcher.lte"]},{"name":"inline fun <T> ArgMatchersScope.any(): T","description":"dev.mokkery.matcher.any","location":"mokkery-runtime/dev.mokkery.matcher/any.html","searchKeys":["any","inline fun <T> ArgMatchersScope.any(): T","dev.mokkery.matcher.any"]},{"name":"inline fun <T> ArgMatchersScope.anyVarargs(): Array<T>","description":"dev.mokkery.matcher.varargs.anyVarargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs.html","searchKeys":["anyVarargs","inline fun <T> ArgMatchersScope.anyVarargs(): Array<T>","dev.mokkery.matcher.varargs.anyVarargs"]},{"name":"inline fun <T> ArgMatchersScope.eq(value: T): T","description":"dev.mokkery.matcher.eq","location":"mokkery-runtime/dev.mokkery.matcher/eq.html","searchKeys":["eq","inline fun <T> ArgMatchersScope.eq(value: T): T","dev.mokkery.matcher.eq"]},{"name":"inline fun <T> ArgMatchersScope.eqRef(value: T): T","description":"dev.mokkery.matcher.eqRef","location":"mokkery-runtime/dev.mokkery.matcher/eq-ref.html","searchKeys":["eqRef","inline fun <T> ArgMatchersScope.eqRef(value: T): T","dev.mokkery.matcher.eqRef"]},{"name":"inline fun <T> ArgMatchersScope.matches(matcher: ArgMatcher<T>): T","description":"dev.mokkery.matcher.matches","location":"mokkery-runtime/dev.mokkery.matcher/matches.html","searchKeys":["matches","inline fun <T> ArgMatchersScope.matches(matcher: ArgMatcher<T>): T","dev.mokkery.matcher.matches"]},{"name":"inline fun <T> ArgMatchersScope.matching(noinline toString: () -> String = { \"matching(...)\" }, noinline predicate: (T) -> Boolean): T","description":"dev.mokkery.matcher.matching","location":"mokkery-runtime/dev.mokkery.matcher/matching.html","searchKeys":["matching","inline fun <T> ArgMatchersScope.matching(noinline toString: () -> String = { \"matching(...)\" }, noinline predicate: (T) -> Boolean): T","dev.mokkery.matcher.matching"]},{"name":"inline fun <T> ArgMatchersScope.neq(value: T): T","description":"dev.mokkery.matcher.neq","location":"mokkery-runtime/dev.mokkery.matcher/neq.html","searchKeys":["neq","inline fun <T> ArgMatchersScope.neq(value: T): T","dev.mokkery.matcher.neq"]},{"name":"inline fun <T> ArgMatchersScope.neqRef(value: T): T","description":"dev.mokkery.matcher.neqRef","location":"mokkery-runtime/dev.mokkery.matcher/neq-ref.html","searchKeys":["neqRef","inline fun <T> ArgMatchersScope.neqRef(value: T): T","dev.mokkery.matcher.neqRef"]},{"name":"inline fun <T> ArgMatchersScope.varargs(noinline predicate: (T) -> Boolean): Array<T>","description":"dev.mokkery.matcher.varargs.varargs","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs.html","searchKeys":["varargs","inline fun <T> ArgMatchersScope.varargs(noinline predicate: (T) -> Boolean): Array<T>","dev.mokkery.matcher.varargs.varargs"]},{"name":"inline fun ArgMatchersScope.anyVarargsBoolean(): BooleanArray","description":"dev.mokkery.matcher.varargs.anyVarargsBoolean","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-boolean.html","searchKeys":["anyVarargsBoolean","inline fun ArgMatchersScope.anyVarargsBoolean(): BooleanArray","dev.mokkery.matcher.varargs.anyVarargsBoolean"]},{"name":"inline fun ArgMatchersScope.anyVarargsByte(): ByteArray","description":"dev.mokkery.matcher.varargs.anyVarargsByte","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-byte.html","searchKeys":["anyVarargsByte","inline fun ArgMatchersScope.anyVarargsByte(): ByteArray","dev.mokkery.matcher.varargs.anyVarargsByte"]},{"name":"inline fun ArgMatchersScope.anyVarargsChar(): CharArray","description":"dev.mokkery.matcher.varargs.anyVarargsChar","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-char.html","searchKeys":["anyVarargsChar","inline fun ArgMatchersScope.anyVarargsChar(): CharArray","dev.mokkery.matcher.varargs.anyVarargsChar"]},{"name":"inline fun ArgMatchersScope.anyVarargsDouble(): DoubleArray","description":"dev.mokkery.matcher.varargs.anyVarargsDouble","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-double.html","searchKeys":["anyVarargsDouble","inline fun ArgMatchersScope.anyVarargsDouble(): DoubleArray","dev.mokkery.matcher.varargs.anyVarargsDouble"]},{"name":"inline fun ArgMatchersScope.anyVarargsFloat(): FloatArray","description":"dev.mokkery.matcher.varargs.anyVarargsFloat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-float.html","searchKeys":["anyVarargsFloat","inline fun ArgMatchersScope.anyVarargsFloat(): FloatArray","dev.mokkery.matcher.varargs.anyVarargsFloat"]},{"name":"inline fun ArgMatchersScope.anyVarargsInt(): IntArray","description":"dev.mokkery.matcher.varargs.anyVarargsInt","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-int.html","searchKeys":["anyVarargsInt","inline fun ArgMatchersScope.anyVarargsInt(): IntArray","dev.mokkery.matcher.varargs.anyVarargsInt"]},{"name":"inline fun ArgMatchersScope.anyVarargsLong(): LongArray","description":"dev.mokkery.matcher.varargs.anyVarargsLong","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-long.html","searchKeys":["anyVarargsLong","inline fun ArgMatchersScope.anyVarargsLong(): LongArray","dev.mokkery.matcher.varargs.anyVarargsLong"]},{"name":"inline fun ArgMatchersScope.anyVarargsShort(): ShortArray","description":"dev.mokkery.matcher.varargs.anyVarargsShort","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-short.html","searchKeys":["anyVarargsShort","inline fun ArgMatchersScope.anyVarargsShort(): ShortArray","dev.mokkery.matcher.varargs.anyVarargsShort"]},{"name":"inline fun ArgMatchersScope.anyVarargsUByte(): UByteArray","description":"dev.mokkery.matcher.varargs.anyVarargsUByte","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-byte.html","searchKeys":["anyVarargsUByte","inline fun ArgMatchersScope.anyVarargsUByte(): UByteArray","dev.mokkery.matcher.varargs.anyVarargsUByte"]},{"name":"inline fun ArgMatchersScope.anyVarargsUInt(): IntArray","description":"dev.mokkery.matcher.varargs.anyVarargsUInt","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-int.html","searchKeys":["anyVarargsUInt","inline fun ArgMatchersScope.anyVarargsUInt(): IntArray","dev.mokkery.matcher.varargs.anyVarargsUInt"]},{"name":"inline fun ArgMatchersScope.anyVarargsULong(): ULongArray","description":"dev.mokkery.matcher.varargs.anyVarargsULong","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-long.html","searchKeys":["anyVarargsULong","inline fun ArgMatchersScope.anyVarargsULong(): ULongArray","dev.mokkery.matcher.varargs.anyVarargsULong"]},{"name":"inline fun ArgMatchersScope.anyVarargsUShort(): UShortArray","description":"dev.mokkery.matcher.varargs.anyVarargsUShort","location":"mokkery-runtime/dev.mokkery.matcher.varargs/any-varargs-u-short.html","searchKeys":["anyVarargsUShort","inline fun ArgMatchersScope.anyVarargsUShort(): UShortArray","dev.mokkery.matcher.varargs.anyVarargsUShort"]},{"name":"inline fun ArgMatchersScope.varargsBoolean(noinline predicate: (Boolean) -> Boolean): BooleanArray","description":"dev.mokkery.matcher.varargs.varargsBoolean","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-boolean.html","searchKeys":["varargsBoolean","inline fun ArgMatchersScope.varargsBoolean(noinline predicate: (Boolean) -> Boolean): BooleanArray","dev.mokkery.matcher.varargs.varargsBoolean"]},{"name":"inline fun ArgMatchersScope.varargsByte(noinline predicate: (Byte) -> Boolean): ByteArray","description":"dev.mokkery.matcher.varargs.varargsByte","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-byte.html","searchKeys":["varargsByte","inline fun ArgMatchersScope.varargsByte(noinline predicate: (Byte) -> Boolean): ByteArray","dev.mokkery.matcher.varargs.varargsByte"]},{"name":"inline fun ArgMatchersScope.varargsChar(noinline predicate: (Short) -> Boolean): CharArray","description":"dev.mokkery.matcher.varargs.varargsChar","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-char.html","searchKeys":["varargsChar","inline fun ArgMatchersScope.varargsChar(noinline predicate: (Short) -> Boolean): CharArray","dev.mokkery.matcher.varargs.varargsChar"]},{"name":"inline fun ArgMatchersScope.varargsDouble(noinline predicate: (Double) -> Boolean): DoubleArray","description":"dev.mokkery.matcher.varargs.varargsDouble","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-double.html","searchKeys":["varargsDouble","inline fun ArgMatchersScope.varargsDouble(noinline predicate: (Double) -> Boolean): DoubleArray","dev.mokkery.matcher.varargs.varargsDouble"]},{"name":"inline fun ArgMatchersScope.varargsFloat(noinline predicate: (Float) -> Boolean): FloatArray","description":"dev.mokkery.matcher.varargs.varargsFloat","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-float.html","searchKeys":["varargsFloat","inline fun ArgMatchersScope.varargsFloat(noinline predicate: (Float) -> Boolean): FloatArray","dev.mokkery.matcher.varargs.varargsFloat"]},{"name":"inline fun ArgMatchersScope.varargsInt(noinline predicate: (Int) -> Boolean): IntArray","description":"dev.mokkery.matcher.varargs.varargsInt","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-int.html","searchKeys":["varargsInt","inline fun ArgMatchersScope.varargsInt(noinline predicate: (Int) -> Boolean): IntArray","dev.mokkery.matcher.varargs.varargsInt"]},{"name":"inline fun ArgMatchersScope.varargsLong(noinline predicate: (Long) -> Boolean): LongArray","description":"dev.mokkery.matcher.varargs.varargsLong","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-long.html","searchKeys":["varargsLong","inline fun ArgMatchersScope.varargsLong(noinline predicate: (Long) -> Boolean): LongArray","dev.mokkery.matcher.varargs.varargsLong"]},{"name":"inline fun ArgMatchersScope.varargsShort(noinline predicate: (Short) -> Boolean): ShortArray","description":"dev.mokkery.matcher.varargs.varargsShort","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-short.html","searchKeys":["varargsShort","inline fun ArgMatchersScope.varargsShort(noinline predicate: (Short) -> Boolean): ShortArray","dev.mokkery.matcher.varargs.varargsShort"]},{"name":"inline fun ArgMatchersScope.varargsUByte(noinline predicate: (UByte) -> Boolean): UByteArray","description":"dev.mokkery.matcher.varargs.varargsUByte","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-byte.html","searchKeys":["varargsUByte","inline fun ArgMatchersScope.varargsUByte(noinline predicate: (UByte) -> Boolean): UByteArray","dev.mokkery.matcher.varargs.varargsUByte"]},{"name":"inline fun ArgMatchersScope.varargsUInt(noinline predicate: (UInt) -> Boolean): IntArray","description":"dev.mokkery.matcher.varargs.varargsUInt","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-int.html","searchKeys":["varargsUInt","inline fun ArgMatchersScope.varargsUInt(noinline predicate: (UInt) -> Boolean): IntArray","dev.mokkery.matcher.varargs.varargsUInt"]},{"name":"inline fun ArgMatchersScope.varargsULong(noinline predicate: (ULong) -> Boolean): ULongArray","description":"dev.mokkery.matcher.varargs.varargsULong","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-long.html","searchKeys":["varargsULong","inline fun ArgMatchersScope.varargsULong(noinline predicate: (ULong) -> Boolean): ULongArray","dev.mokkery.matcher.varargs.varargsULong"]},{"name":"inline fun ArgMatchersScope.varargsUShort(noinline predicate: (UShort) -> Boolean): UShortArray","description":"dev.mokkery.matcher.varargs.varargsUShort","location":"mokkery-runtime/dev.mokkery.matcher.varargs/varargs-u-short.html","searchKeys":["varargsUShort","inline fun ArgMatchersScope.varargsUShort(noinline predicate: (UShort) -> Boolean): UShortArray","dev.mokkery.matcher.varargs.varargsUShort"]},{"name":"interface Answer<out T>","description":"dev.mokkery.answering.Answer","location":"mokkery-runtime/dev.mokkery.answering/-answer/index.html","searchKeys":["Answer","interface Answer<out T>","dev.mokkery.answering.Answer"]},{"name":"interface AnsweringScope<T>","description":"dev.mokkery.answering.AnsweringScope","location":"mokkery-runtime/dev.mokkery.answering/-answering-scope/index.html","searchKeys":["AnsweringScope","interface AnsweringScope<T>","dev.mokkery.answering.AnsweringScope"]},{"name":"interface ArgMatchersScope","description":"dev.mokkery.matcher.ArgMatchersScope","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matchers-scope/index.html","searchKeys":["ArgMatchersScope","interface ArgMatchersScope","dev.mokkery.matcher.ArgMatchersScope"]},{"name":"interface BlockingAnsweringScope<T> : AnsweringScope<T> ","description":"dev.mokkery.answering.BlockingAnsweringScope","location":"mokkery-runtime/dev.mokkery.answering/-blocking-answering-scope/index.html","searchKeys":["BlockingAnsweringScope","interface BlockingAnsweringScope<T> : AnsweringScope<T> ","dev.mokkery.answering.BlockingAnsweringScope"]},{"name":"interface SuspendAnsweringScope<T> : AnsweringScope<T> ","description":"dev.mokkery.answering.SuspendAnsweringScope","location":"mokkery-runtime/dev.mokkery.answering/-suspend-answering-scope/index.html","searchKeys":["SuspendAnsweringScope","interface SuspendAnsweringScope<T> : AnsweringScope<T> ","dev.mokkery.answering.SuspendAnsweringScope"]},{"name":"interface Suspending<T> : Answer<T> ","description":"dev.mokkery.answering.Answer.Suspending","location":"mokkery-runtime/dev.mokkery.answering/-answer/-suspending/index.html","searchKeys":["Suspending","interface Suspending<T> : Answer<T> ","dev.mokkery.answering.Answer.Suspending"]},{"name":"interface VarArgMatcher<T> : ArgMatcher<T> ","description":"dev.mokkery.matcher.varargs.VarArgMatcher","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/index.html","searchKeys":["VarArgMatcher","interface VarArgMatcher<T> : ArgMatcher<T> ","dev.mokkery.matcher.varargs.VarArgMatcher"]},{"name":"object Any : ArgMatcher<Any?> ","description":"dev.mokkery.matcher.ArgMatcher.Any","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-any/index.html","searchKeys":["Any","object Any : ArgMatcher<Any?> ","dev.mokkery.matcher.ArgMatcher.Any"]},{"name":"object Autofill : Answer<Any?> ","description":"dev.mokkery.answering.Answer.Autofill","location":"mokkery-runtime/dev.mokkery.answering/-answer/-autofill/index.html","searchKeys":["Autofill","object Autofill : Answer<Any?> ","dev.mokkery.answering.Answer.Autofill"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.mokkery.answering.FunctionScope.equals","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.mokkery.answering.FunctionScope.equals"]},{"name":"open override fun call(scope: FunctionScope): Any?","description":"dev.mokkery.answering.Answer.Autofill.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-autofill/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): Any?","dev.mokkery.answering.Answer.Autofill.call"]},{"name":"open override fun call(scope: FunctionScope): Nothing","description":"dev.mokkery.answering.Answer.Suspending.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-suspending/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): Nothing","dev.mokkery.answering.Answer.Suspending.call"]},{"name":"open override fun call(scope: FunctionScope): Nothing","description":"dev.mokkery.answering.Answer.Throws.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-throws/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): Nothing","dev.mokkery.answering.Answer.Throws.call"]},{"name":"open override fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.Block.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.Block.call"]},{"name":"open override fun call(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.Const.call","location":"mokkery-runtime/dev.mokkery.answering/-answer/-const/call.html","searchKeys":["call","open override fun call(scope: FunctionScope): T","dev.mokkery.answering.Answer.Const.call"]},{"name":"open override fun hashCode(): Int","description":"dev.mokkery.answering.FunctionScope.hashCode","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.mokkery.answering.FunctionScope.hashCode"]},{"name":"open override fun matches(arg: Any?): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Any.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-any/matches.html","searchKeys":["matches","open override fun matches(arg: Any?): Boolean","dev.mokkery.matcher.ArgMatcher.Any.matches"]},{"name":"open override fun matches(arg: Any?): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.matches","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/matches.html","searchKeys":["matches","open override fun matches(arg: Any?): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.matches"]},{"name":"open override fun matches(arg: Any?): Boolean","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.matches","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/matches.html","searchKeys":["matches","open override fun matches(arg: Any?): Boolean","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Comparing.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.Comparing.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Equals.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.Equals.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.EqualsRef.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.Matching.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.Matching.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.NotEqual.matches"]},{"name":"open override fun matches(arg: T): Boolean","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.matches","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/matches.html","searchKeys":["matches","open override fun matches(arg: T): Boolean","dev.mokkery.matcher.ArgMatcher.NotEqualRef.matches"]},{"name":"open override fun toString(): String","description":"dev.mokkery.answering.FunctionScope.toString","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.answering.FunctionScope.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Any.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-any/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Any.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Comparing.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Comparing.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Equals.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Equals.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.EqualsRef.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-equals-ref/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.EqualsRef.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.Matching.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-matching/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.Matching.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.NotEqual.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.NotEqual.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.ArgMatcher.NotEqualRef.toString","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-not-equal-ref/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.ArgMatcher.NotEqualRef.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.toString","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-all-that/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.varargs.VarArgMatcher.AllThat.toString"]},{"name":"open override fun toString(): String","description":"dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.toString","location":"mokkery-runtime/dev.mokkery.matcher.varargs/-var-arg-matcher/-any-of/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mokkery.matcher.varargs.VarArgMatcher.AnyOf.toString"]},{"name":"open suspend fun callSuspend(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.callSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/call-suspend.html","searchKeys":["callSuspend","open suspend fun callSuspend(scope: FunctionScope): T","dev.mokkery.answering.Answer.callSuspend"]},{"name":"open suspend override fun callSuspend(scope: FunctionScope): T","description":"dev.mokkery.answering.Answer.BlockSuspend.callSuspend","location":"mokkery-runtime/dev.mokkery.answering/-answer/-block-suspend/call-suspend.html","searchKeys":["callSuspend","open suspend override fun callSuspend(scope: FunctionScope): T","dev.mokkery.answering.Answer.BlockSuspend.callSuspend"]},{"name":"operator fun <T> component1(): T","description":"dev.mokkery.answering.FunctionScope.component1","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component1.html","searchKeys":["component1","operator fun <T> component1(): T","dev.mokkery.answering.FunctionScope.component1"]},{"name":"operator fun <T> component2(): T","description":"dev.mokkery.answering.FunctionScope.component2","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component2.html","searchKeys":["component2","operator fun <T> component2(): T","dev.mokkery.answering.FunctionScope.component2"]},{"name":"operator fun <T> component3(): T","description":"dev.mokkery.answering.FunctionScope.component3","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component3.html","searchKeys":["component3","operator fun <T> component3(): T","dev.mokkery.answering.FunctionScope.component3"]},{"name":"operator fun <T> component4(): T","description":"dev.mokkery.answering.FunctionScope.component4","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component4.html","searchKeys":["component4","operator fun <T> component4(): T","dev.mokkery.answering.FunctionScope.component4"]},{"name":"operator fun <T> component5(): T","description":"dev.mokkery.answering.FunctionScope.component5","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component5.html","searchKeys":["component5","operator fun <T> component5(): T","dev.mokkery.answering.FunctionScope.component5"]},{"name":"operator fun <T> component6(): T","description":"dev.mokkery.answering.FunctionScope.component6","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component6.html","searchKeys":["component6","operator fun <T> component6(): T","dev.mokkery.answering.FunctionScope.component6"]},{"name":"operator fun <T> component7(): T","description":"dev.mokkery.answering.FunctionScope.component7","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/component7.html","searchKeys":["component7","operator fun <T> component7(): T","dev.mokkery.answering.FunctionScope.component7"]},{"name":"val args: List<Any?>","description":"dev.mokkery.answering.FunctionScope.args","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/args.html","searchKeys":["args","val args: List<Any?>","dev.mokkery.answering.FunctionScope.args"]},{"name":"val compare: (Int) -> Boolean","description":"dev.mokkery.matcher.ArgMatcher.Comparing.Type.compare","location":"mokkery-runtime/dev.mokkery.matcher/-arg-matcher/-comparing/-type/compare.html","searchKeys":["compare","val compare: (Int) -> Boolean","dev.mokkery.matcher.ArgMatcher.Comparing.Type.compare"]},{"name":"val returnType: KClass<*>","description":"dev.mokkery.answering.FunctionScope.returnType","location":"mokkery-runtime/dev.mokkery.answering/-function-scope/return-type.html","searchKeys":["returnType","val returnType: KClass<*>","dev.mokkery.answering.FunctionScope.returnType"]}]